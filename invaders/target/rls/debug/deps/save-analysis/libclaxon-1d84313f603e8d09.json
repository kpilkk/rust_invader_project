{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3","program":"C:\\Users\\kapil\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","claxon","C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","embed-bitcode=no","-C","debuginfo=2","-C","metadata=1d84313f603e8d09","-C","extra-filename=-1d84313f603e8d09","--out-dir","e:\\Git\\rust_invader_project\\invaders\\target\\rls\\debug\\deps","-L","dependency=e:\\Git\\rust_invader_project\\invaders\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\kapil\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"e:\\Git\\rust_invader_project\\invaders\\target\\rls\\debug\\deps\\libclaxon-1d84313f603e8d09.rmeta"},"prelude":{"crate_id":{"name":"claxon","disambiguator":[17701908377409421648,6819964117334079681]},"crate_root":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src","external_crates":[{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[902711862199739234,15082167224296373374]}},{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[5048311760381386034,12753961808535803278]}},{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[847775214756591688,12437863933651081164]}},{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[18098153966720408130,4102567439342721650]}},{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[14085577876822856882,15393158987199036233]}},{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[3188366355873518403,14471389999965490426]}},{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[10237517513868340142,18396708545822173986]}},{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17305999185247584930,14125623615750666193]}},{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","num":9,"id":{"name":"hashbrown","disambiguator":[7451980452763147359,4800032867518142595]}},{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[842541340887862638,17591716377464122790]}},{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","num":11,"id":{"name":"rustc_demangle","disambiguator":[14650435931294811010,18006816567319070280]}},{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","num":12,"id":{"name":"std_detect","disambiguator":[16073749092757737146,5785406473963590530]}},{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[9426002052484834533,14451905897035318657]}}],"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":295,"byte_end":19112,"line_start":8,"line_end":493,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":2522,"byte_end":2527,"line_start":87,"line_end":87,"column_start":17,"column_end":22},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":2529,"byte_end":2535,"line_start":87,"line_end":87,"column_start":24,"column_end":30},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":2553,"byte_end":2558,"line_start":88,"line_end":88,"column_start":16,"column_end":21},"alias_span":null,"name":"Block","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":295,"byte_end":19112,"line_start":8,"line_end":493,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":6},{"krate":0,"index":9},{"krate":0,"index":12},{"krate":0,"index":15},{"krate":0,"index":18},{"krate":0,"index":21},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":32},{"krate":0,"index":35},{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":82},{"krate":0,"index":123},{"krate":0,"index":199},{"krate":0,"index":263},{"krate":0,"index":369},{"krate":0,"index":424},{"krate":0,"index":425},{"krate":0,"index":428},{"krate":0,"index":431},{"krate":0,"index":434},{"krate":0,"index":439},{"krate":0,"index":602},{"krate":0,"index":605},{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":447},{"krate":0,"index":449},{"krate":0,"index":451},{"krate":0,"index":458},{"krate":0,"index":462},{"krate":0,"index":478},{"krate":0,"index":483}],"decl_id":null,"docs":" Claxon, a FLAC decoding library.","sig":null,"attributes":[{"value":"/ Claxon, a FLAC decoding library.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":295,"byte_end":331,"line_start":8,"line_end":8,"column_start":1,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":332,"byte_end":335,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ Examples","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":336,"byte_end":348,"line_start":10,"line_end":10,"column_start":1,"column_end":13}},{"value":"/ ========","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":349,"byte_end":361,"line_start":11,"line_end":11,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":362,"byte_end":365,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ The following example computes the root mean square (RMS) of a FLAC file.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":366,"byte_end":443,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":444,"byte_end":447,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":448,"byte_end":455,"line_start":15,"line_end":15,"column_start":1,"column_end":8}},{"value":"/ # use claxon;","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":456,"byte_end":473,"line_start":16,"line_end":16,"column_start":1,"column_end":18}},{"value":"/ let mut reader = claxon::FlacReader::open(\"testsamples/pop.flac\").unwrap();","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":474,"byte_end":553,"line_start":17,"line_end":17,"column_start":1,"column_end":80}},{"value":"/ let mut sqr_sum = 0.0;","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":554,"byte_end":580,"line_start":18,"line_end":18,"column_start":1,"column_end":27}},{"value":"/ let mut count = 0;","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":581,"byte_end":603,"line_start":19,"line_end":19,"column_start":1,"column_end":23}},{"value":"/ for sample in reader.samples() {","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":604,"byte_end":640,"line_start":20,"line_end":20,"column_start":1,"column_end":37}},{"value":"/     let s = sample.unwrap() as f64;","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":641,"byte_end":680,"line_start":21,"line_end":21,"column_start":1,"column_end":40}},{"value":"/     sqr_sum += s * s;","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":681,"byte_end":706,"line_start":22,"line_end":22,"column_start":1,"column_end":26}},{"value":"/     count += 1;","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":707,"byte_end":726,"line_start":23,"line_end":23,"column_start":1,"column_end":20}},{"value":"/ }","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":727,"byte_end":732,"line_start":24,"line_end":24,"column_start":1,"column_end":6}},{"value":"/ println!(\"RMS is {}\", (sqr_sum / count as f64).sqrt());","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":733,"byte_end":792,"line_start":25,"line_end":25,"column_start":1,"column_end":60}},{"value":"/ ```","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":793,"byte_end":800,"line_start":26,"line_end":26,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":801,"byte_end":804,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ A simple way to decode a file to wav with Claxon and","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":805,"byte_end":861,"line_start":28,"line_end":28,"column_start":1,"column_end":57}},{"value":"/ [Hound](https://github.com/ruuda/hound):","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":862,"byte_end":906,"line_start":29,"line_end":29,"column_start":1,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":907,"byte_end":910,"line_start":30,"line_end":30,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":911,"byte_end":918,"line_start":31,"line_end":31,"column_start":1,"column_end":8}},{"value":"/ # extern crate hound;","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":919,"byte_end":944,"line_start":32,"line_end":32,"column_start":1,"column_end":26}},{"value":"/ # extern crate claxon;","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":945,"byte_end":971,"line_start":33,"line_end":33,"column_start":1,"column_end":27}},{"value":"/ # use std::path::Path;","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":972,"byte_end":998,"line_start":34,"line_end":34,"column_start":1,"column_end":27}},{"value":"/ # fn decode_file(fname: &Path) {","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":999,"byte_end":1035,"line_start":35,"line_end":35,"column_start":1,"column_end":37}},{"value":"/ let mut reader = claxon::FlacReader::open(fname).expect(\"failed to open FLAC stream\");","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1036,"byte_end":1126,"line_start":36,"line_end":36,"column_start":1,"column_end":91}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1127,"byte_end":1130,"line_start":37,"line_end":37,"column_start":1,"column_end":4}},{"value":"/ let spec = hound::WavSpec {","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1131,"byte_end":1162,"line_start":38,"line_end":38,"column_start":1,"column_end":32}},{"value":"/     channels: reader.streaminfo().channels as u16,","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1163,"byte_end":1217,"line_start":39,"line_end":39,"column_start":1,"column_end":55}},{"value":"/     sample_rate: reader.streaminfo().sample_rate,","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1218,"byte_end":1271,"line_start":40,"line_end":40,"column_start":1,"column_end":54}},{"value":"/     bits_per_sample: reader.streaminfo().bits_per_sample as u16,","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1272,"byte_end":1340,"line_start":41,"line_end":41,"column_start":1,"column_end":69}},{"value":"/     sample_format: hound::SampleFormat::Int,","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1341,"byte_end":1389,"line_start":42,"line_end":42,"column_start":1,"column_end":49}},{"value":"/ };","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1390,"byte_end":1396,"line_start":43,"line_end":43,"column_start":1,"column_end":7}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1397,"byte_end":1400,"line_start":44,"line_end":44,"column_start":1,"column_end":4}},{"value":"/ let fname_wav = fname.with_extension(\"wav\");","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1401,"byte_end":1449,"line_start":45,"line_end":45,"column_start":1,"column_end":49}},{"value":"/ let opt_wav_writer = hound::WavWriter::create(fname_wav, spec);","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1450,"byte_end":1517,"line_start":46,"line_end":46,"column_start":1,"column_end":68}},{"value":"/ let mut wav_writer = opt_wav_writer.expect(\"failed to create wav file\");","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1518,"byte_end":1594,"line_start":47,"line_end":47,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1595,"byte_end":1598,"line_start":48,"line_end":48,"column_start":1,"column_end":4}},{"value":"/ for opt_sample in reader.samples() {","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1599,"byte_end":1639,"line_start":49,"line_end":49,"column_start":1,"column_end":41}},{"value":"/     let sample = opt_sample.expect(\"failed to decode FLAC stream\");","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1640,"byte_end":1711,"line_start":50,"line_end":50,"column_start":1,"column_end":72}},{"value":"/     wav_writer.write_sample(sample).expect(\"failed to write wav file\");","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1712,"byte_end":1787,"line_start":51,"line_end":51,"column_start":1,"column_end":76}},{"value":"/ }","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1788,"byte_end":1793,"line_start":52,"line_end":52,"column_start":1,"column_end":6}},{"value":"/ # }","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1794,"byte_end":1801,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"/ ```","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1802,"byte_end":1809,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1810,"byte_end":1813,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"/ Retrieving the artist metadata:","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1814,"byte_end":1849,"line_start":56,"line_end":56,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1850,"byte_end":1853,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"/ ```","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1854,"byte_end":1861,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"/ # use claxon;","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1862,"byte_end":1879,"line_start":59,"line_end":59,"column_start":1,"column_end":18}},{"value":"/ let reader = claxon::FlacReader::open(\"testsamples/pop.flac\").unwrap();","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1880,"byte_end":1955,"line_start":60,"line_end":60,"column_start":1,"column_end":76}},{"value":"/ for artist in reader.get_tag(\"ARTIST\") {","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":1956,"byte_end":2000,"line_start":61,"line_end":61,"column_start":1,"column_end":45}},{"value":"/     println!(\"{}\", artist);","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":2001,"byte_end":2032,"line_start":62,"line_end":62,"column_start":1,"column_end":32}},{"value":"/ }","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":2033,"byte_end":2038,"line_start":63,"line_end":63,"column_start":1,"column_end":6}},{"value":"/ ```","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":2039,"byte_end":2046,"line_start":64,"line_end":64,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":2047,"byte_end":2050,"line_start":65,"line_end":65,"column_start":1,"column_end":4}},{"value":"/ For more examples, see the [examples](https://github.com/ruuda/claxon/tree/master/examples)","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":2051,"byte_end":2146,"line_start":66,"line_end":66,"column_start":1,"column_end":96}},{"value":"/ directory in the crate.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":2147,"byte_end":2174,"line_start":67,"line_end":67,"column_start":1,"column_end":28}},{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":2176,"byte_end":2198,"line_start":69,"line_end":69,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":488},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":28196,"byte_end":28203,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"IoError","qualname":"::error::Error::IoError","value":"Error::IoError(io::Error)","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":" Not a decoding error, but a problem with the underlying IO.\n","sig":null,"attributes":[{"value":"/ Not a decoding error, but a problem with the underlying IO.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":28128,"byte_end":28191,"line_start":19,"line_end":19,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":491},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":28272,"byte_end":28283,"line_start":23,"line_end":23,"column_start":5,"column_end":16},"name":"FormatError","qualname":"::error::Error::FormatError","value":"Error::FormatError(&'static str)","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":" An ill-formed FLAC stream was encountered.\n","sig":null,"attributes":[{"value":"/ An ill-formed FLAC stream was encountered.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":28221,"byte_end":28267,"line_start":22,"line_end":22,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":494},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":28667,"byte_end":28678,"line_start":31,"line_end":31,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::Error::Unsupported","value":"Error::Unsupported(&'static str)","parent":{"krate":0,"index":487},"children":[],"decl_id":null,"docs":" A currently unsupported feature of the FLAC format was encountered.","sig":null,"attributes":[{"value":"/ A currently unsupported feature of the FLAC format was encountered.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":28304,"byte_end":28375,"line_start":25,"line_end":25,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":28380,"byte_end":28383,"line_start":26,"line_end":26,"column_start":5,"column_end":8}},{"value":"/ Claxon reads the FLAC format as it was with FLAC 1.3.1. Values in the","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":28388,"byte_end":28461,"line_start":27,"line_end":27,"column_start":5,"column_end":78}},{"value":"/ specification that are marked as reserved will cause a `FormatError`;","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":28466,"byte_end":28539,"line_start":28,"line_end":28,"column_start":5,"column_end":78}},{"value":"/ `Unsupported` is used for features that are in the specification, but","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":28544,"byte_end":28617,"line_start":29,"line_end":29,"column_start":5,"column_end":78}},{"value":"/ which are not implemented by Claxon.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":28622,"byte_end":28662,"line_start":30,"line_end":30,"column_start":5,"column_end":45}}]},{"kind":"Enum","id":{"krate":0,"index":487},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":28116,"byte_end":28121,"line_start":18,"line_end":18,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"pub enum Error {\n    IoError(io::Error),\n    FormatError(&'static str),\n    Unsupported(&'static str),\n}","parent":null,"children":[{"krate":0,"index":488},{"krate":0,"index":491},{"krate":0,"index":494}],"decl_id":null,"docs":" An error that prevents successful decoding of the FLAC stream.\n","sig":null,"attributes":[{"value":"/ An error that prevents successful decoding of the FLAC stream.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":28023,"byte_end":28089,"line_start":16,"line_end":16,"column_start":1,"column_end":67}}]},{"kind":"Type","id":{"krate":0,"index":119},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":30770,"byte_end":30776,"line_start":97,"line_end":97,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A type for results generated by Claxon where the error type is hard-wired.\n","sig":null,"attributes":[{"value":"/ A type for results generated by Claxon where the error type is hard-wired.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":30682,"byte_end":30760,"line_start":96,"line_end":96,"column_start":1,"column_end":79}}]},{"kind":"Mod","id":{"krate":0,"index":123},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"frame","qualname":"::frame","value":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","parent":null,"children":[{"krate":0,"index":124},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":134},{"krate":0,"index":135},{"krate":0,"index":138},{"krate":0,"index":141},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":499},{"krate":0,"index":504},{"krate":0,"index":506},{"krate":0,"index":507},{"krate":0,"index":514},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":527},{"krate":0,"index":529},{"krate":0,"index":530},{"krate":0,"index":532},{"krate":0,"index":538},{"krate":0,"index":540},{"krate":0,"index":154},{"krate":0,"index":156},{"krate":0,"index":158},{"krate":0,"index":160},{"krate":0,"index":161},{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":168},{"krate":0,"index":180},{"krate":0,"index":185},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":193},{"krate":0,"index":194}],"decl_id":null,"docs":" The `frame` module deals with the frames that make up a FLAC stream.\n","sig":null,"attributes":[{"value":"/ The `frame` module deals with the frames that make up a FLAC stream.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":31254,"byte_end":31326,"line_start":8,"line_end":8,"column_start":1,"column_end":73}}]},{"kind":"Struct","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":46003,"byte_end":46008,"line_start":402,"line_end":402,"column_start":12,"column_end":17},"name":"Block","qualname":"::frame::Block","value":"Block {  }","parent":null,"children":[{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167}],"decl_id":null,"docs":" A block of raw audio samples.\n","sig":null,"attributes":[{"value":"/ A block of raw audio samples.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":45958,"byte_end":45991,"line_start":401,"line_end":401,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":170},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":46639,"byte_end":46644,"line_start":424,"line_end":424,"column_start":12,"column_end":17},"name":"empty","qualname":"<Block>::empty","value":"pub fn empty() -> Block","parent":null,"children":[],"decl_id":null,"docs":" Returns a block with 0 channels and 0 samples.\n","sig":null,"attributes":[{"value":"/ Returns a block with 0 channels and 0 samples.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":46577,"byte_end":46627,"line_start":423,"line_end":423,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":171},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":47102,"byte_end":47106,"line_start":438,"line_end":438,"column_start":12,"column_end":16},"name":"time","qualname":"<Block>::time","value":"pub fn time(&Self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Returns the inter-channel sample number of the first sample in the block.","sig":null,"attributes":[{"value":"/ Returns the inter-channel sample number of the first sample in the block.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":46826,"byte_end":46903,"line_start":433,"line_end":433,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":46908,"byte_end":46911,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ The time is independent of the number of channels. To get the start time","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":46916,"byte_end":46992,"line_start":435,"line_end":435,"column_start":5,"column_end":81}},{"value":"/ of the block in seconds, divide this number by the sample rate in the","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":46997,"byte_end":47070,"line_start":436,"line_end":436,"column_start":5,"column_end":78}},{"value":"/ streaminfo.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":47075,"byte_end":47090,"line_start":437,"line_end":437,"column_start":5,"column_end":20}}]},{"kind":"Method","id":{"krate":0,"index":172},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":47334,"byte_end":47337,"line_start":446,"line_end":446,"column_start":12,"column_end":15},"name":"len","qualname":"<Block>::len","value":"pub fn len(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the total number of samples in this block.","sig":null,"attributes":[{"value":"/ Returns the total number of samples in this block.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":47167,"byte_end":47221,"line_start":442,"line_end":442,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":47226,"byte_end":47229,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Samples in different channels are counted as distinct samples.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":47234,"byte_end":47300,"line_start":444,"line_end":444,"column_start":5,"column_end":71}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":47305,"byte_end":47322,"line_start":445,"line_end":445,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":47888,"byte_end":47896,"line_start":459,"line_end":459,"column_start":12,"column_end":20},"name":"duration","qualname":"<Block>::duration","value":"pub fn duration(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of inter-channel samples in the block.","sig":null,"attributes":[{"value":"/ Returns the number of inter-channel samples in the block.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":47536,"byte_end":47597,"line_start":452,"line_end":452,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":47602,"byte_end":47605,"line_start":453,"line_end":453,"column_start":5,"column_end":8}},{"value":"/ The duration is independent of the number of channels. The returned","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":47610,"byte_end":47681,"line_start":454,"line_end":454,"column_start":5,"column_end":76}},{"value":"/ value is also referred to as the *block size*. To get the duration of","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":47686,"byte_end":47759,"line_start":455,"line_end":455,"column_start":5,"column_end":78}},{"value":"/ the block in seconds, divide this number by the sample rate in the","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":47764,"byte_end":47834,"line_start":456,"line_end":456,"column_start":5,"column_end":75}},{"value":"/ streaminfo.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":47839,"byte_end":47854,"line_start":457,"line_end":457,"column_start":5,"column_end":20}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":47859,"byte_end":47876,"line_start":458,"line_end":458,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":174},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48180,"byte_end":48188,"line_start":467,"line_end":467,"column_start":12,"column_end":20},"name":"channels","qualname":"<Block>::channels","value":"pub fn channels(&Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of channels in the block.\n","sig":null,"attributes":[{"value":"/ Returns the number of channels in the block.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":47948,"byte_end":47996,"line_start":463,"line_end":463,"column_start":5,"column_end":53}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48151,"byte_end":48168,"line_start":466,"line_end":466,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48399,"byte_end":48406,"line_start":477,"line_end":477,"column_start":12,"column_end":19},"name":"channel","qualname":"<Block>::channel","value":"pub fn channel(&Self, u32) -> &[i32]","parent":null,"children":[],"decl_id":null,"docs":" Returns the (zero-based) `ch`-th channel as a slice.","sig":null,"attributes":[{"value":"/ Returns the (zero-based) `ch`-th channel as a slice.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48238,"byte_end":48294,"line_start":471,"line_end":471,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48299,"byte_end":48302,"line_start":472,"line_end":472,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48307,"byte_end":48319,"line_start":473,"line_end":473,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48324,"byte_end":48327,"line_start":474,"line_end":474,"column_start":5,"column_end":8}},{"value":"/ Panics if `ch >= channels()`.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48332,"byte_end":48365,"line_start":475,"line_end":475,"column_start":5,"column_end":38}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48370,"byte_end":48387,"line_start":476,"line_end":476,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48966,"byte_end":48972,"line_start":494,"line_end":494,"column_start":12,"column_end":18},"name":"sample","qualname":"<Block>::sample","value":"pub fn sample(&Self, u32, u32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Returns a sample in this block.","sig":null,"attributes":[{"value":"/ Returns a sample in this block.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48579,"byte_end":48614,"line_start":483,"line_end":483,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48619,"byte_end":48622,"line_start":484,"line_end":484,"column_start":5,"column_end":8}},{"value":"/ The value returned is for the zero-based `ch`-th channel of the","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48627,"byte_end":48694,"line_start":485,"line_end":485,"column_start":5,"column_end":72}},{"value":"/ inter-channel sample with index `sample` in this block (so this is not","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48699,"byte_end":48773,"line_start":486,"line_end":486,"column_start":5,"column_end":79}},{"value":"/ the global sample number).","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48778,"byte_end":48808,"line_start":487,"line_end":487,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48813,"byte_end":48816,"line_start":488,"line_end":488,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48821,"byte_end":48833,"line_start":489,"line_end":489,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48838,"byte_end":48841,"line_start":490,"line_end":490,"column_start":5,"column_end":8}},{"value":"/ Panics if `ch >= channels()` or if `sample >= len()` for the last","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48846,"byte_end":48915,"line_start":491,"line_end":491,"column_start":5,"column_end":74}},{"value":"/ channel.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48920,"byte_end":48932,"line_start":492,"line_end":492,"column_start":5,"column_end":17}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":48937,"byte_end":48954,"line_start":493,"line_end":493,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":177},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":49375,"byte_end":49386,"line_start":503,"line_end":503,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Block>::into_buffer","value":"pub fn into_buffer(Self) -> Vec<i32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying buffer that stores the samples in this block.","sig":null,"attributes":[{"value":"/ Returns the underlying buffer that stores the samples in this block.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":49131,"byte_end":49203,"line_start":499,"line_end":499,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":49208,"byte_end":49211,"line_start":500,"line_end":500,"column_start":5,"column_end":8}},{"value":"/ This allows the buffer to be reused to decode the next frame. The","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":49216,"byte_end":49285,"line_start":501,"line_end":501,"column_start":5,"column_end":74}},{"value":"/ capacity of the buffer may be bigger than `len()` times `channels()`.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":49290,"byte_end":49363,"line_start":502,"line_end":502,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":178},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":49767,"byte_end":49781,"line_start":516,"line_end":516,"column_start":12,"column_end":26},"name":"stereo_samples","qualname":"<Block>::stereo_samples","value":"pub fn stereo_samples<'a>(&'a Self) -> StereoSamples","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that produces left and right channel samples.","sig":null,"attributes":[{"value":"/ Returns an iterator that produces left and right channel samples.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":49446,"byte_end":49515,"line_start":507,"line_end":507,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":49520,"byte_end":49523,"line_start":508,"line_end":508,"column_start":5,"column_end":8}},{"value":"/ This iterator can be more efficient than requesting a sample directly,","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":49528,"byte_end":49602,"line_start":509,"line_end":509,"column_start":5,"column_end":79}},{"value":"/ because it avoids a bounds check.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":49607,"byte_end":49644,"line_start":510,"line_end":510,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":49649,"byte_end":49652,"line_start":511,"line_end":511,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":49657,"byte_end":49669,"line_start":512,"line_end":512,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":49674,"byte_end":49677,"line_start":513,"line_end":513,"column_start":5,"column_end":8}},{"value":"/ Panics if the number of channels in the block is not 2.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":49682,"byte_end":49741,"line_start":514,"line_end":514,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":49746,"byte_end":49755,"line_start":515,"line_end":515,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":50649,"byte_end":50662,"line_start":548,"line_end":548,"column_start":12,"column_end":25},"name":"StereoSamples","qualname":"::frame::StereoSamples","value":"StereoSamples {  }","parent":null,"children":[{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184}],"decl_id":null,"docs":" An iterator over the stereo sample pairs in a block.","sig":null,"attributes":[{"value":"/ An iterator over the stereo sample pairs in a block.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":50517,"byte_end":50573,"line_start":545,"line_end":545,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":50574,"byte_end":50577,"line_start":546,"line_end":546,"column_start":1,"column_end":4}},{"value":"/ This iterator is produced by `Block::stereo_samples()`.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":50578,"byte_end":50637,"line_start":547,"line_end":547,"column_start":1,"column_end":60}}]},{"kind":"Struct","id":{"krate":0,"index":189},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":52353,"byte_end":52364,"line_start":603,"line_end":603,"column_start":12,"column_end":23},"name":"FrameReader","qualname":"::frame::FrameReader","value":"FrameReader {  }","parent":null,"children":[{"krate":0,"index":191}],"decl_id":null,"docs":" Reads frames from a stream and exposes decoded blocks as an iterator.","sig":null,"attributes":[{"value":"/ Reads frames from a stream and exposes decoded blocks as an iterator.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":52128,"byte_end":52201,"line_start":599,"line_end":599,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":52202,"byte_end":52205,"line_start":600,"line_end":600,"column_start":1,"column_end":4}},{"value":"/ TODO: for now, it is assumes that the reader starts at a frame header;","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":52206,"byte_end":52280,"line_start":601,"line_end":601,"column_start":1,"column_end":75}},{"value":"/ no searching for a sync code is performed at the moment.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":52281,"byte_end":52341,"line_start":602,"line_end":602,"column_start":1,"column_end":61}}]},{"kind":"Type","id":{"krate":0,"index":192},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":52498,"byte_end":52509,"line_start":609,"line_end":609,"column_start":10,"column_end":21},"name":"FrameResult","qualname":"::frame::FrameResult","value":"Result<Option<Block>>","parent":null,"children":[],"decl_id":null,"docs":" Either a `Block` or an `Error`.\n","sig":null,"attributes":[{"value":"/ Either a `Block` or an `Error`.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":52398,"byte_end":52433,"line_start":607,"line_end":607,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":196},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":54344,"byte_end":54347,"line_start":652,"line_end":652,"column_start":12,"column_end":15},"name":"new","qualname":"<FrameReader<R>>::new","value":"pub fn new(R) -> FrameReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new frame reader that will yield at least one element.\n","sig":null,"attributes":[{"value":"/ Creates a new frame reader that will yield at least one element.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":54264,"byte_end":54332,"line_start":651,"line_end":651,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":197},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":54958,"byte_end":54974,"line_start":667,"line_end":667,"column_start":12,"column_end":28},"name":"read_next_or_eof","qualname":"<FrameReader<R>>::read_next_or_eof","value":"pub fn read_next_or_eof(&mut Self, Vec<i32>) -> FrameResult","parent":null,"children":[],"decl_id":null,"docs":" Decodes the next frame or returns an error if the data was invalid.","sig":null,"attributes":[{"value":"/ Decodes the next frame or returns an error if the data was invalid.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":54447,"byte_end":54518,"line_start":658,"line_end":658,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":54523,"byte_end":54526,"line_start":659,"line_end":659,"column_start":5,"column_end":8}},{"value":"/ The buffer is moved into the returned block, so that the same buffer may","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":54531,"byte_end":54607,"line_start":660,"line_end":660,"column_start":5,"column_end":81}},{"value":"/ be reused to decode multiple blocks, avoiding a heap allocation every","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":54612,"byte_end":54685,"line_start":661,"line_end":661,"column_start":5,"column_end":78}},{"value":"/ time. It can be retrieved again with `block.into_buffer()`. If the","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":54690,"byte_end":54760,"line_start":662,"line_end":662,"column_start":5,"column_end":75}},{"value":"/ buffer is not large enough to hold all samples, a larger buffer is","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":54765,"byte_end":54835,"line_start":663,"line_end":663,"column_start":5,"column_end":75}},{"value":"/ allocated automatically.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":54840,"byte_end":54868,"line_start":664,"line_end":664,"column_start":5,"column_end":33}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":54873,"byte_end":54876,"line_start":665,"line_end":665,"column_start":5,"column_end":8}},{"value":"/ TODO: I should really be consistent with 'read' and 'decode'.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":54881,"byte_end":54946,"line_start":666,"line_end":666,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":198},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":60230,"byte_end":60240,"line_start":782,"line_end":782,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FrameReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Destroy the frame reader, returning the wrapped reader.\n","sig":null,"attributes":[{"value":"/ Destroy the frame reader, returning the wrapped reader.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":60159,"byte_end":60218,"line_start":781,"line_end":781,"column_start":5,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":199},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"input","qualname":"::input","value":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","parent":null,"children":[{"krate":0,"index":200},{"krate":0,"index":203},{"krate":0,"index":206},{"krate":0,"index":212},{"krate":0,"index":217},{"krate":0,"index":227},{"krate":0,"index":233},{"krate":0,"index":240},{"krate":0,"index":246},{"krate":0,"index":247},{"krate":0,"index":248},{"krate":0,"index":253}],"decl_id":null,"docs":" Exposes traits that help reading data at the bit level with low overhead.","sig":null,"attributes":[{"value":"/ Exposes traits that help reading data at the bit level with low overhead.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":60674,"byte_end":60751,"line_start":8,"line_end":8,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":60752,"byte_end":60755,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ The traits in this module deal with reading bytes (with a given endianness)","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":60756,"byte_end":60835,"line_start":10,"line_end":10,"column_start":1,"column_end":80}},{"value":"/ from a buffered reader, in such a way that still allows efficient","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":60836,"byte_end":60905,"line_start":11,"line_end":11,"column_start":1,"column_end":70}},{"value":"/ checksumming of the data read. There is also a bitstream which is used","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":60906,"byte_end":60980,"line_start":12,"line_end":12,"column_start":1,"column_end":75}},{"value":"/ internally to read the bitstream.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":60981,"byte_end":61018,"line_start":13,"line_end":13,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":206},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":61396,"byte_end":61410,"line_start":24,"line_end":24,"column_start":12,"column_end":26},"name":"BufferedReader","qualname":"::input::BufferedReader","value":"BufferedReader {  }","parent":null,"children":[{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210},{"krate":0,"index":211}],"decl_id":null,"docs":" Similar to `std::io::BufRead`, but more performant.","sig":null,"attributes":[{"value":"/ Similar to `std::io::BufRead`, but more performant.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":61048,"byte_end":61103,"line_start":18,"line_end":18,"column_start":1,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":61104,"byte_end":61107,"line_start":19,"line_end":19,"column_start":1,"column_end":4}},{"value":"/ There is no simple way to wrap a standard `BufRead` such that it can compute","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":61108,"byte_end":61188,"line_start":20,"line_end":20,"column_start":1,"column_end":81}},{"value":"/ checksums on consume. This is really something that needs a less restrictive","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":61189,"byte_end":61269,"line_start":21,"line_end":21,"column_start":1,"column_end":81}},{"value":"/ interface. Apart from enabling checksum computations, this buffered reader","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":61270,"byte_end":61348,"line_start":22,"line_end":22,"column_start":1,"column_end":79}},{"value":"/ has some convenience functions.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":61349,"byte_end":61384,"line_start":23,"line_end":23,"column_start":1,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":214},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":61843,"byte_end":61846,"line_start":41,"line_end":41,"column_start":12,"column_end":15},"name":"new","qualname":"<BufferedReader<R>>::new","value":"pub fn new(R) -> BufferedReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Wrap the reader in a new buffered reader.\n","sig":null,"attributes":[{"value":"/ Wrap the reader in a new buffered reader.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":61786,"byte_end":61831,"line_start":40,"line_end":40,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":216},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":62636,"byte_end":62646,"line_start":64,"line_end":64,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<BufferedReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Destroys the buffered reader, returning the wrapped reader.","sig":null,"attributes":[{"value":"/ Destroys the buffered reader, returning the wrapped reader.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":62508,"byte_end":62571,"line_start":61,"line_end":61,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":62576,"byte_end":62579,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Anything in the buffer will be lost.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":62584,"byte_end":62624,"line_start":63,"line_end":63,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":217},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":62763,"byte_end":62772,"line_start":71,"line_end":71,"column_start":11,"column_end":20},"name":"ReadBytes","qualname":"::input::ReadBytes","value":"ReadBytes","parent":null,"children":[{"krate":0,"index":218},{"krate":0,"index":219},{"krate":0,"index":220},{"krate":0,"index":221},{"krate":0,"index":222},{"krate":0,"index":223},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":226}],"decl_id":null,"docs":" Provides convenience methods to make input less cumbersome.\n","sig":null,"attributes":[{"value":"/ Provides convenience methods to make input less cumbersome.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":62689,"byte_end":62752,"line_start":70,"line_end":70,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":218},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":62827,"byte_end":62834,"line_start":73,"line_end":73,"column_start":8,"column_end":15},"name":"read_u8","qualname":"::input::ReadBytes::read_u8","value":"pub fn read_u8(&mut Self) -> io::Result<u8>","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" Reads a single byte, failing on EOF.\n","sig":null,"attributes":[{"value":"/ Reads a single byte, failing on EOF.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":62779,"byte_end":62819,"line_start":72,"line_end":72,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":219},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":62922,"byte_end":62936,"line_start":76,"line_end":76,"column_start":8,"column_end":22},"name":"read_u8_or_eof","qualname":"::input::ReadBytes::read_u8_or_eof","value":"pub fn read_u8_or_eof(&mut Self) -> io::Result<Option<u8>>","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" Reads a single byte, not failing on EOF.\n","sig":null,"attributes":[{"value":"/ Reads a single byte, not failing on EOF.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":62870,"byte_end":62914,"line_start":75,"line_end":75,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":220},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":63032,"byte_end":63041,"line_start":79,"line_end":79,"column_start":8,"column_end":17},"name":"read_into","qualname":"::input::ReadBytes::read_into","value":"pub fn read_into(&mut Self, &mut [u8]) -> io::Result<()>","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" Reads until the provided buffer is full.\n","sig":null,"attributes":[{"value":"/ Reads until the provided buffer is full.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":62980,"byte_end":63024,"line_start":78,"line_end":78,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":221},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":63235,"byte_end":63239,"line_start":84,"line_end":84,"column_start":8,"column_end":12},"name":"skip","qualname":"::input::ReadBytes::skip","value":"pub fn skip(&mut Self, u32) -> io::Result<()>","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" Skips over the specified number of bytes.","sig":null,"attributes":[{"value":"/ Skips over the specified number of bytes.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":63096,"byte_end":63141,"line_start":81,"line_end":81,"column_start":5,"column_end":50}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":63146,"byte_end":63149,"line_start":82,"line_end":82,"column_start":5,"column_end":8}},{"value":"/ For a buffered reader, this can help a lot by just bumping a pointer.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":63154,"byte_end":63227,"line_start":83,"line_end":83,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":222},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":63376,"byte_end":63387,"line_start":87,"line_end":87,"column_start":8,"column_end":19},"name":"read_be_u16","qualname":"::input::ReadBytes::read_be_u16","value":"pub fn read_be_u16(&mut Self) -> io::Result<u16>","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" Reads two bytes and interprets them as a big-endian 16-bit unsigned integer.\n","sig":null,"attributes":[{"value":"/ Reads two bytes and interprets them as a big-endian 16-bit unsigned integer.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":63288,"byte_end":63368,"line_start":86,"line_end":86,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":223},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":63636,"byte_end":63654,"line_start":94,"line_end":94,"column_start":8,"column_end":26},"name":"read_be_u16_or_eof","qualname":"::input::ReadBytes::read_be_u16_or_eof","value":"pub fn read_be_u16_or_eof(&mut Self) -> io::Result<Option<u16>>","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" Reads two bytes and interprets them as a big-endian 16-bit unsigned integer.\n","sig":null,"attributes":[{"value":"/ Reads two bytes and interprets them as a big-endian 16-bit unsigned integer.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":63548,"byte_end":63628,"line_start":93,"line_end":93,"column_start":5,"column_end":85}}]},{"kind":"Method","id":{"krate":0,"index":224},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":64018,"byte_end":64029,"line_start":104,"line_end":104,"column_start":8,"column_end":19},"name":"read_be_u24","qualname":"::input::ReadBytes::read_be_u24","value":"pub fn read_be_u24(&mut Self) -> io::Result<u32>","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" Reads three bytes and interprets them as a big-endian 24-bit unsigned integer.\n","sig":null,"attributes":[{"value":"/ Reads three bytes and interprets them as a big-endian 24-bit unsigned integer.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":63928,"byte_end":64010,"line_start":103,"line_end":103,"column_start":5,"column_end":87}}]},{"kind":"Method","id":{"krate":0,"index":225},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":64336,"byte_end":64347,"line_start":112,"line_end":112,"column_start":8,"column_end":19},"name":"read_be_u32","qualname":"::input::ReadBytes::read_be_u32","value":"pub fn read_be_u32(&mut Self) -> io::Result<u32>","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" Reads four bytes and interprets them as a big-endian 32-bit unsigned integer.\n","sig":null,"attributes":[{"value":"/ Reads four bytes and interprets them as a big-endian 32-bit unsigned integer.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":64247,"byte_end":64328,"line_start":111,"line_end":111,"column_start":5,"column_end":86}}]},{"kind":"Method","id":{"krate":0,"index":226},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":64714,"byte_end":64725,"line_start":121,"line_end":121,"column_start":8,"column_end":19},"name":"read_le_u32","qualname":"::input::ReadBytes::read_le_u32","value":"pub fn read_le_u32(&mut Self) -> io::Result<u32>","parent":{"krate":0,"index":217},"children":[],"decl_id":null,"docs":" Reads four bytes and interprets them as a little-endian 32-bit unsigned integer.\n","sig":null,"attributes":[{"value":"/ Reads four bytes and interprets them as a little-endian 32-bit unsigned integer.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":64622,"byte_end":64706,"line_start":120,"line_end":120,"column_start":5,"column_end":89}}]},{"kind":"Struct","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":74949,"byte_end":74958,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"Bitstream","qualname":"::input::Bitstream","value":"Bitstream {  }","parent":null,"children":[{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252}],"decl_id":null,"docs":" Wraps a `Reader` to facilitate reading that is not byte-aligned.\n","sig":null,"attributes":[{"value":"/ Wraps a `Reader` to facilitate reading that is not byte-aligned.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":74869,"byte_end":74937,"line_start":414,"line_end":414,"column_start":1,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":255},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":75327,"byte_end":75330,"line_start":426,"line_end":426,"column_start":12,"column_end":15},"name":"new","qualname":"<Bitstream<R>>::new","value":"pub fn new(R) -> Bitstream<R>","parent":null,"children":[],"decl_id":null,"docs":" Wraps the reader with a reader that facilitates reading individual bits.\n","sig":null,"attributes":[{"value":"/ Wraps the reader with a reader that facilitates reading individual bits.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":75239,"byte_end":75315,"line_start":425,"line_end":425,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":257},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":75892,"byte_end":75900,"line_start":447,"line_end":447,"column_start":12,"column_end":20},"name":"read_bit","qualname":"<Bitstream<R>>::read_bit","value":"pub fn read_bit(&mut Self) -> io::Result<bool>","parent":null,"children":[],"decl_id":null,"docs":" Reads a single bit.","sig":null,"attributes":[{"value":"/ Reads a single bit.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":75682,"byte_end":75705,"line_start":442,"line_end":442,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":75710,"byte_end":75713,"line_start":443,"line_end":443,"column_start":5,"column_end":8}},{"value":"/ Reading a single bit can be done more efficiently than reading","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":75718,"byte_end":75784,"line_start":444,"line_end":444,"column_start":5,"column_end":71}},{"value":"/ more than one bit, because a bit never straddles a byte boundary.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":75789,"byte_end":75858,"line_start":445,"line_end":445,"column_start":5,"column_end":74}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":75863,"byte_end":75880,"line_start":446,"line_end":446,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":76899,"byte_end":76909,"line_start":475,"line_end":475,"column_start":12,"column_end":22},"name":"read_unary","qualname":"<Bitstream<R>>::read_unary","value":"pub fn read_unary(&mut Self) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Reads bits until a 1 is read, and returns the number of zeros read.","sig":null,"attributes":[{"value":"/ Reads bits until a 1 is read, and returns the number of zeros read.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":76648,"byte_end":76719,"line_start":470,"line_end":470,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":76724,"byte_end":76727,"line_start":471,"line_end":471,"column_start":5,"column_end":8}},{"value":"/ Because the reader buffers a byte internally, reading unary can be done","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":76732,"byte_end":76807,"line_start":472,"line_end":472,"column_start":5,"column_end":80}},{"value":"/ more efficiently than by just reading bit by bit.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":76812,"byte_end":76865,"line_start":473,"line_end":473,"column_start":5,"column_end":58}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":76870,"byte_end":76887,"line_start":474,"line_end":474,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":259},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":78618,"byte_end":78629,"line_start":515,"line_end":515,"column_start":12,"column_end":23},"name":"read_leq_u8","qualname":"<Bitstream<R>>::read_leq_u8","value":"pub fn read_leq_u8(&mut Self, u32) -> io::Result<u8>","parent":null,"children":[],"decl_id":null,"docs":" Reads at most eight bits.\n","sig":null,"attributes":[{"value":"/ Reads at most eight bits.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":78555,"byte_end":78584,"line_start":513,"line_end":513,"column_start":5,"column_end":34}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":78589,"byte_end":78606,"line_start":514,"line_end":514,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":80528,"byte_end":80546,"line_start":562,"line_end":562,"column_start":12,"column_end":30},"name":"read_gt_u8_leq_u16","qualname":"<Bitstream<R>>::read_gt_u8_leq_u16","value":"pub fn read_gt_u8_leq_u16(&mut Self, u32) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Read n bits, where 8 < n <= 16.\n","sig":null,"attributes":[{"value":"/ Read n bits, where 8 < n <= 16.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":80459,"byte_end":80494,"line_start":560,"line_end":560,"column_start":5,"column_end":40}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":80499,"byte_end":80516,"line_start":561,"line_end":561,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":261},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":82364,"byte_end":82376,"line_start":606,"line_end":606,"column_start":12,"column_end":24},"name":"read_leq_u16","qualname":"<Bitstream<R>>::read_leq_u16","value":"pub fn read_leq_u16(&mut Self, u32) -> io::Result<u16>","parent":null,"children":[],"decl_id":null,"docs":" Reads at most 16 bits.\n","sig":null,"attributes":[{"value":"/ Reads at most 16 bits.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":82304,"byte_end":82330,"line_start":604,"line_end":604,"column_start":5,"column_end":31}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":82335,"byte_end":82352,"line_start":605,"line_end":605,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":83132,"byte_end":83144,"line_start":626,"line_end":626,"column_start":12,"column_end":24},"name":"read_leq_u32","qualname":"<Bitstream<R>>::read_leq_u32","value":"pub fn read_leq_u32(&mut Self, u32) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Reads at most 32 bits.\n","sig":null,"attributes":[{"value":"/ Reads at most 32 bits.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":83072,"byte_end":83098,"line_start":624,"line_end":624,"column_start":5,"column_end":31}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":83103,"byte_end":83120,"line_start":625,"line_end":625,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":263},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"metadata","qualname":"::metadata","value":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","parent":null,"children":[{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":268},{"krate":0,"index":271},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":280},{"krate":0,"index":541},{"krate":0,"index":545},{"krate":0,"index":547},{"krate":0,"index":548},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":565},{"krate":0,"index":569},{"krate":0,"index":571},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":288},{"krate":0,"index":309},{"krate":0,"index":312},{"krate":0,"index":315},{"krate":0,"index":321},{"krate":0,"index":323},{"krate":0,"index":328},{"krate":0,"index":331},{"krate":0,"index":338},{"krate":0,"index":340},{"krate":0,"index":342},{"krate":0,"index":344},{"krate":0,"index":347},{"krate":0,"index":351},{"krate":0,"index":353},{"krate":0,"index":355},{"krate":0,"index":359},{"krate":0,"index":360},{"krate":0,"index":364}],"decl_id":null,"docs":" The `metadata` module deals with metadata at the beginning of a FLAC stream.\n","sig":null,"attributes":[{"value":"/ The `metadata` module deals with metadata at the beginning of a FLAC stream.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":89786,"byte_end":89866,"line_start":8,"line_end":8,"column_start":1,"column_end":81}}]},{"kind":"Struct","id":{"krate":0,"index":548},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":90190,"byte_end":90200,"line_start":24,"line_end":24,"column_start":12,"column_end":22},"name":"StreamInfo","qualname":"::metadata::StreamInfo","value":"StreamInfo { min_block_size, max_block_size, min_frame_size, max_frame_size, sample_rate, channels, bits_per_sample, samples, md5sum }","parent":null,"children":[{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":554},{"krate":0,"index":555},{"krate":0,"index":556},{"krate":0,"index":557}],"decl_id":null,"docs":" The streaminfo metadata block, with important information about the stream.\n","sig":null,"attributes":[{"value":"/ The streaminfo metadata block, with important information about the stream.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":90069,"byte_end":90148,"line_start":22,"line_end":22,"column_start":1,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":90512,"byte_end":90526,"line_start":30,"line_end":30,"column_start":9,"column_end":23},"name":"min_block_size","qualname":"::metadata::StreamInfo::min_block_size","value":"u16","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" The minimum block size (in inter-channel samples) used in the stream.","sig":null,"attributes":[{"value":"/ The minimum block size (in inter-channel samples) used in the stream.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":90274,"byte_end":90347,"line_start":26,"line_end":26,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":90352,"byte_end":90355,"line_start":27,"line_end":27,"column_start":5,"column_end":8}},{"value":"/ This number is independent of the number of channels. To get the minimum","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":90360,"byte_end":90436,"line_start":28,"line_end":28,"column_start":5,"column_end":81}},{"value":"/ block duration in seconds, divide this by the sample rate.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":90441,"byte_end":90503,"line_start":29,"line_end":29,"column_start":5,"column_end":67}}]},{"kind":"Field","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":90960,"byte_end":90974,"line_start":38,"line_end":38,"column_start":9,"column_end":23},"name":"max_block_size","qualname":"::metadata::StreamInfo::max_block_size","value":"u16","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" The maximum block size (in inter-channel samples) used in the stream.","sig":null,"attributes":[{"value":"/ The maximum block size (in inter-channel samples) used in the stream.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":90537,"byte_end":90610,"line_start":31,"line_end":31,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":90615,"byte_end":90618,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ This number is independent of the number of channels. To get the","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":90623,"byte_end":90691,"line_start":33,"line_end":33,"column_start":5,"column_end":73}},{"value":"/ maximum block duration in seconds, divide by the sample rate. To avoid","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":90696,"byte_end":90770,"line_start":34,"line_end":34,"column_start":5,"column_end":79}},{"value":"/ allocations during decoding, a buffer of this size times the number of","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":90775,"byte_end":90849,"line_start":35,"line_end":35,"column_start":5,"column_end":79}},{"value":"/ channels can be allocated up front and passed into","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":90854,"byte_end":90908,"line_start":36,"line_end":36,"column_start":5,"column_end":59}},{"value":"/ `FrameReader::read_next_or_eof()`.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":90913,"byte_end":90951,"line_start":37,"line_end":37,"column_start":5,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91051,"byte_end":91065,"line_start":40,"line_end":40,"column_start":9,"column_end":23},"name":"min_frame_size","qualname":"::metadata::StreamInfo::min_frame_size","value":"std::option::Option<u32>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" The minimum frame size (in bytes) used in the stream.\n","sig":null,"attributes":[{"value":"/ The minimum frame size (in bytes) used in the stream.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":90985,"byte_end":91042,"line_start":39,"line_end":39,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91150,"byte_end":91164,"line_start":42,"line_end":42,"column_start":9,"column_end":23},"name":"max_frame_size","qualname":"::metadata::StreamInfo::max_frame_size","value":"std::option::Option<u32>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" The maximum frame size (in bytes) used in the stream.\n","sig":null,"attributes":[{"value":"/ The maximum frame size (in bytes) used in the stream.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91084,"byte_end":91141,"line_start":41,"line_end":41,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91218,"byte_end":91229,"line_start":44,"line_end":44,"column_start":9,"column_end":20},"name":"sample_rate","qualname":"::metadata::StreamInfo::sample_rate","value":"u32","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" The sample rate in Hz.\n","sig":null,"attributes":[{"value":"/ The sample rate in Hz.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91183,"byte_end":91209,"line_start":43,"line_end":43,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":554},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91276,"byte_end":91284,"line_start":46,"line_end":46,"column_start":9,"column_end":17},"name":"channels","qualname":"::metadata::StreamInfo::channels","value":"u32","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" The number of channels.\n","sig":null,"attributes":[{"value":"/ The number of channels.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91240,"byte_end":91267,"line_start":45,"line_end":45,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":555},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91338,"byte_end":91353,"line_start":48,"line_end":48,"column_start":9,"column_end":24},"name":"bits_per_sample","qualname":"::metadata::StreamInfo::bits_per_sample","value":"u32","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" The number of bits per sample.\n","sig":null,"attributes":[{"value":"/ The number of bits per sample.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91295,"byte_end":91329,"line_start":47,"line_end":47,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":556},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91480,"byte_end":91487,"line_start":51,"line_end":51,"column_start":9,"column_end":16},"name":"samples","qualname":"::metadata::StreamInfo::samples","value":"std::option::Option<u64>","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" The total number of inter-channel samples in the stream.\n","sig":null,"attributes":[{"value":"/ The total number of inter-channel samples in the stream.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91364,"byte_end":91424,"line_start":49,"line_end":49,"column_start":5,"column_end":65}}]},{"kind":"Field","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91561,"byte_end":91567,"line_start":53,"line_end":53,"column_start":9,"column_end":15},"name":"md5sum","qualname":"::metadata::StreamInfo::md5sum","value":"[u8; 16]","parent":{"krate":0,"index":548},"children":[],"decl_id":null,"docs":" MD5 signature of the unencoded audio data.\n","sig":null,"attributes":[{"value":"/ MD5 signature of the unencoded audio data.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91506,"byte_end":91552,"line_start":52,"line_end":52,"column_start":5,"column_end":51}}]},{"kind":"Struct","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91652,"byte_end":91661,"line_start":58,"line_end":58,"column_start":12,"column_end":21},"name":"SeekPoint","qualname":"::metadata::SeekPoint","value":"SeekPoint { sample, offset, samples }","parent":null,"children":[{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568}],"decl_id":null,"docs":" A seek point in the seek table.\n","sig":null,"attributes":[{"value":"/ A seek point in the seek table.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91582,"byte_end":91617,"line_start":56,"line_end":56,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91776,"byte_end":91782,"line_start":60,"line_end":60,"column_start":9,"column_end":15},"name":"sample","qualname":"::metadata::SeekPoint::sample","value":"u64","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" Sample number of the first sample in the target frame, or 2<sup>64</sup> - 1 for a placeholder.\n","sig":null,"attributes":[{"value":"/ Sample number of the first sample in the target frame, or 2<sup>64</sup> - 1 for a placeholder.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91668,"byte_end":91767,"line_start":59,"line_end":59,"column_start":5,"column_end":104}}]},{"kind":"Field","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91923,"byte_end":91929,"line_start":63,"line_end":63,"column_start":9,"column_end":15},"name":"offset","qualname":"::metadata::SeekPoint::offset","value":"u64","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" Offset in bytes from the first byte of the first frame header to the first byte of the\n target frame's header.\n","sig":null,"attributes":[{"value":"/ Offset in bytes from the first byte of the first frame header to the first byte of the","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91793,"byte_end":91883,"line_start":61,"line_end":61,"column_start":5,"column_end":95}},{"value":"/ target frame's header.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91888,"byte_end":91914,"line_start":62,"line_end":62,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91991,"byte_end":91998,"line_start":65,"line_end":65,"column_start":9,"column_end":16},"name":"samples","qualname":"::metadata::SeekPoint::samples","value":"u16","parent":{"krate":0,"index":565},"children":[],"decl_id":null,"docs":" Number of samples in the target frame.\n","sig":null,"attributes":[{"value":"/ Number of samples in the target frame.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":91940,"byte_end":91982,"line_start":64,"line_end":64,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":92066,"byte_end":92075,"line_start":69,"line_end":69,"column_start":12,"column_end":21},"name":"SeekTable","qualname":"::metadata::SeekTable","value":"SeekTable {  }","parent":null,"children":[{"krate":0,"index":284}],"decl_id":null,"docs":" A seek table to aid seeking in the stream.\n","sig":null,"attributes":[{"value":"/ A seek table to aid seeking in the stream.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":92008,"byte_end":92054,"line_start":68,"line_end":68,"column_start":1,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":92318,"byte_end":92331,"line_start":76,"line_end":76,"column_start":12,"column_end":25},"name":"VorbisComment","qualname":"::metadata::VorbisComment","value":"VorbisComment { vendor, comments }","parent":null,"children":[{"krate":0,"index":286},{"krate":0,"index":287}],"decl_id":null,"docs":" Vorbis comments, also known as FLAC tags (e.g. artist, title, etc.).\n","sig":null,"attributes":[{"value":"/ Vorbis comments, also known as FLAC tags (e.g. artist, title, etc.).","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":92234,"byte_end":92306,"line_start":75,"line_end":75,"column_start":1,"column_end":73}}]},{"kind":"Field","id":{"krate":0,"index":286},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":92595,"byte_end":92601,"line_start":82,"line_end":82,"column_start":9,"column_end":15},"name":"vendor","qualname":"::metadata::VorbisComment::vendor","value":"std::string::String","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" The “vendor string”, chosen by the encoder vendor.","sig":null,"attributes":[{"value":"/ The “vendor string”, chosen by the encoder vendor.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":92338,"byte_end":92396,"line_start":77,"line_end":77,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":92401,"byte_end":92404,"line_start":78,"line_end":78,"column_start":5,"column_end":8}},{"value":"/ This string usually contains the name and version of the program that","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":92409,"byte_end":92482,"line_start":79,"line_end":79,"column_start":5,"column_end":78}},{"value":"/ encoded the FLAC stream, such as `reference libFLAC 1.3.2 20170101`","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":92487,"byte_end":92558,"line_start":80,"line_end":80,"column_start":5,"column_end":76}},{"value":"/ or `Lavf57.25.100`.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":92563,"byte_end":92586,"line_start":81,"line_end":81,"column_start":5,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":287},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93420,"byte_end":93428,"line_start":100,"line_end":100,"column_start":9,"column_end":17},"name":"comments","qualname":"::metadata::VorbisComment::comments","value":"std::vec::Vec<(std::string::String, usize)>","parent":{"krate":0,"index":285},"children":[],"decl_id":null,"docs":" Name-value pairs of Vorbis comments, such as `ARTIST=Queen`.","sig":null,"attributes":[{"value":"/ Name-value pairs of Vorbis comments, such as `ARTIST=Queen`.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":92616,"byte_end":92680,"line_start":84,"line_end":84,"column_start":5,"column_end":69}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":92685,"byte_end":92688,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This struct stores a raw low-level representation of tags. Use","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":92693,"byte_end":92759,"line_start":86,"line_end":86,"column_start":5,"column_end":71}},{"value":"/ `FlacReader::tags()` for a friendlier iterator. The tuple consists of","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":92764,"byte_end":92837,"line_start":87,"line_end":87,"column_start":5,"column_end":78}},{"value":"/ the string in `\"NAME=value\"` format, and the index of the `'='` into","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":92842,"byte_end":92914,"line_start":88,"line_end":88,"column_start":5,"column_end":77}},{"value":"/ that string.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":92919,"byte_end":92935,"line_start":89,"line_end":89,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":92940,"byte_end":92943,"line_start":90,"line_end":90,"column_start":5,"column_end":8}},{"value":"/ The name is supposed to be interpreted case-insensitively, and is","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":92948,"byte_end":93017,"line_start":91,"line_end":91,"column_start":5,"column_end":74}},{"value":"/ guaranteed to consist of ASCII characters. Claxon does not normalize","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93022,"byte_end":93094,"line_start":92,"line_end":92,"column_start":5,"column_end":77}},{"value":"/ the casing of the name. Use `metadata::GetTag` to do a case-insensitive","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93099,"byte_end":93174,"line_start":93,"line_end":93,"column_start":5,"column_end":80}},{"value":"/ lookup.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93179,"byte_end":93190,"line_start":94,"line_end":94,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93195,"byte_end":93198,"line_start":95,"line_end":95,"column_start":5,"column_end":8}},{"value":"/ Names need not be unique. For instance, multiple `ARTIST` comments might","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93203,"byte_end":93279,"line_start":96,"line_end":96,"column_start":5,"column_end":81}},{"value":"/ be present on a collaboration track.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93284,"byte_end":93324,"line_start":97,"line_end":97,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93329,"byte_end":93332,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ See <https://www.xiph.org/vorbis/doc/v-comment.html> for more details.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93337,"byte_end":93411,"line_start":99,"line_end":99,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":289},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93551,"byte_end":93561,"line_start":106,"line_end":106,"column_start":5,"column_end":15},"name":"StreamInfo","qualname":"::metadata::MetadataBlock::StreamInfo","value":"MetadataBlock::StreamInfo(StreamInfo)","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" A stream info block.\n","sig":null,"attributes":[{"value":"/ A stream info block.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93522,"byte_end":93546,"line_start":105,"line_end":105,"column_start":5,"column_end":29}}]},{"kind":"StructVariant","id":{"krate":0,"index":292},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93630,"byte_end":93637,"line_start":108,"line_end":108,"column_start":5,"column_end":12},"name":"Padding","qualname":"::metadata::MetadataBlock::Padding","value":"MetadataBlock::Padding { length }","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" A padding block (with no meaningful data).\n","sig":null,"attributes":[{"value":"/ A padding block (with no meaningful data).","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93579,"byte_end":93625,"line_start":107,"line_end":107,"column_start":5,"column_end":51}}]},{"kind":"StructVariant","id":{"krate":0,"index":294},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93774,"byte_end":93785,"line_start":113,"line_end":113,"column_start":5,"column_end":16},"name":"Application","qualname":"::metadata::MetadataBlock::Application","value":"MetadataBlock::Application { id, data }","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" An application block with application-specific data.\n","sig":null,"attributes":[{"value":"/ An application block with application-specific data.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93713,"byte_end":93769,"line_start":112,"line_end":112,"column_start":5,"column_end":61}}]},{"kind":"TupleVariant","id":{"krate":0,"index":297},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93961,"byte_end":93970,"line_start":120,"line_end":120,"column_start":5,"column_end":14},"name":"SeekTable","qualname":"::metadata::MetadataBlock::SeekTable","value":"MetadataBlock::SeekTable(SeekTable)","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" A seek table block.\n","sig":null,"attributes":[{"value":"/ A seek table block.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93933,"byte_end":93956,"line_start":119,"line_end":119,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":300},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":94044,"byte_end":94057,"line_start":122,"line_end":122,"column_start":5,"column_end":18},"name":"VorbisComment","qualname":"::metadata::MetadataBlock::VorbisComment","value":"MetadataBlock::VorbisComment(VorbisComment)","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" A Vorbis comment block, also known as FLAC tags.\n","sig":null,"attributes":[{"value":"/ A Vorbis comment block, also known as FLAC tags.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93987,"byte_end":94039,"line_start":121,"line_end":121,"column_start":5,"column_end":57}}]},{"kind":"TupleVariant","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":94105,"byte_end":94113,"line_start":124,"line_end":124,"column_start":5,"column_end":13},"name":"CueSheet","qualname":"::metadata::MetadataBlock::CueSheet","value":"MetadataBlock::CueSheet","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" A CUE sheet block.\n","sig":null,"attributes":[{"value":"/ A CUE sheet block.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":94078,"byte_end":94100,"line_start":123,"line_end":123,"column_start":5,"column_end":27}}]},{"kind":"TupleVariant","id":{"krate":0,"index":305},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":94152,"byte_end":94159,"line_start":126,"line_end":126,"column_start":5,"column_end":12},"name":"Picture","qualname":"::metadata::MetadataBlock::Picture","value":"MetadataBlock::Picture","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" A picture block.\n","sig":null,"attributes":[{"value":"/ A picture block.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":94127,"byte_end":94147,"line_start":125,"line_end":125,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":307},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":94248,"byte_end":94256,"line_start":128,"line_end":128,"column_start":5,"column_end":13},"name":"Reserved","qualname":"::metadata::MetadataBlock::Reserved","value":"MetadataBlock::Reserved","parent":{"krate":0,"index":288},"children":[],"decl_id":null,"docs":" A block with a reserved block type, not supported by this library.\n","sig":null,"attributes":[{"value":"/ A block with a reserved block type, not supported by this library.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":94173,"byte_end":94243,"line_start":127,"line_end":127,"column_start":5,"column_end":75}}]},{"kind":"Enum","id":{"krate":0,"index":288},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93502,"byte_end":93515,"line_start":104,"line_end":104,"column_start":10,"column_end":23},"name":"MetadataBlock","qualname":"::metadata::MetadataBlock","value":"pub enum MetadataBlock {\n    StreamInfo(StreamInfo),\n    Padding {\n        length: u32,\n    },\n    Application {\n        id: u32,\n        data: Vec<u8>,\n    },\n    SeekTable(SeekTable),\n    VorbisComment(VorbisComment),\n    CueSheet,\n    Picture,\n    Reserved,\n}","parent":null,"children":[{"krate":0,"index":289},{"krate":0,"index":292},{"krate":0,"index":294},{"krate":0,"index":297},{"krate":0,"index":300},{"krate":0,"index":303},{"krate":0,"index":305},{"krate":0,"index":307}],"decl_id":null,"docs":" A metadata about the flac stream.\n","sig":null,"attributes":[{"value":"/ A metadata about the flac stream.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":93455,"byte_end":93492,"line_start":103,"line_end":103,"column_start":1,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":309},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":94387,"byte_end":94391,"line_start":134,"line_end":134,"column_start":12,"column_end":16},"name":"Tags","qualname":"::metadata::Tags","value":"Tags {  }","parent":null,"children":[{"krate":0,"index":311}],"decl_id":null,"docs":" Iterates over Vorbis comments (FLAC tags) in a FLAC stream.","sig":null,"attributes":[{"value":"/ Iterates over Vorbis comments (FLAC tags) in a FLAC stream.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":94261,"byte_end":94324,"line_start":131,"line_end":131,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":94325,"byte_end":94328,"line_start":132,"line_end":132,"column_start":1,"column_end":4}},{"value":"/ See `FlacReader::tags()` for more details.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":94329,"byte_end":94375,"line_start":133,"line_end":133,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":314},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":94562,"byte_end":94565,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"new","qualname":"<Tags>::new","value":"pub fn new(&'a [(String, usize)]) -> Tags","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `Tags` iterator.\n","sig":null,"attributes":[{"value":"/ Returns a new `Tags` iterator.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":94502,"byte_end":94536,"line_start":140,"line_end":140,"column_start":5,"column_end":39}},{"value":"inline","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":94541,"byte_end":94550,"line_start":141,"line_end":141,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":323},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":95270,"byte_end":95276,"line_start":170,"line_end":170,"column_start":12,"column_end":18},"name":"GetTag","qualname":"::metadata::GetTag","value":"GetTag {  }","parent":null,"children":[{"krate":0,"index":325},{"krate":0,"index":326},{"krate":0,"index":327}],"decl_id":null,"docs":" Iterates over Vorbis comments looking for a specific one; returns its values as `&str`.","sig":null,"attributes":[{"value":"/ Iterates over Vorbis comments looking for a specific one; returns its values as `&str`.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":95113,"byte_end":95204,"line_start":167,"line_end":167,"column_start":1,"column_end":92}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":95205,"byte_end":95208,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ See `FlacReader::get_tag()` for more details.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":95209,"byte_end":95258,"line_start":169,"line_end":169,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":330},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":95608,"byte_end":95611,"line_start":182,"line_end":182,"column_start":12,"column_end":15},"name":"new","qualname":"<GetTag>::new","value":"pub fn new(&'a [(String, usize)], &'a str) -> GetTag","parent":null,"children":[],"decl_id":null,"docs":" Returns a new `GetTag` iterator.\n","sig":null,"attributes":[{"value":"/ Returns a new `GetTag` iterator.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":95546,"byte_end":95582,"line_start":180,"line_end":180,"column_start":5,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":95587,"byte_end":95596,"line_start":181,"line_end":181,"column_start":5,"column_end":14}}]},{"kind":"Function","id":{"krate":0,"index":340},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":97532,"byte_end":97563,"line_start":244,"line_end":244,"column_start":8,"column_end":39},"name":"read_metadata_block_with_header","qualname":"::metadata::read_metadata_block_with_header","value":"pub fn read_metadata_block_with_header<R: ReadBytes>(&mut R)\n-> Result<MetadataBlock>","parent":null,"children":[],"decl_id":null,"docs":" Read a single metadata block header and body from the input.","sig":null,"attributes":[{"value":"/ Read a single metadata block header and body from the input.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":96994,"byte_end":97058,"line_start":233,"line_end":233,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":97059,"byte_end":97062,"line_start":234,"line_end":234,"column_start":1,"column_end":4}},{"value":"/ When reading a regular flac stream, there is no need to use this function","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":97063,"byte_end":97140,"line_start":235,"line_end":235,"column_start":1,"column_end":78}},{"value":"/ directly; constructing a `FlacReader` will read the header and its metadata","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":97141,"byte_end":97220,"line_start":236,"line_end":236,"column_start":1,"column_end":80}},{"value":"/ blocks.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":97221,"byte_end":97232,"line_start":237,"line_end":237,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":97233,"byte_end":97236,"line_start":238,"line_end":238,"column_start":1,"column_end":4}},{"value":"/ When a flac stream is embedded in a container format, this function can be","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":97237,"byte_end":97315,"line_start":239,"line_end":239,"column_start":1,"column_end":79}},{"value":"/ used to decode a single metadata block. For instance, the Ogg format embeds","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":97316,"byte_end":97395,"line_start":240,"line_end":240,"column_start":1,"column_end":80}},{"value":"/ metadata blocks including their header verbatim in packets. This function","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":97396,"byte_end":97473,"line_start":241,"line_end":241,"column_start":1,"column_end":78}},{"value":"/ can be used to decode that raw data.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":97474,"byte_end":97514,"line_start":242,"line_end":242,"column_start":1,"column_end":41}},{"value":"inline","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":97515,"byte_end":97524,"line_start":243,"line_end":243,"column_start":1,"column_end":10}}]},{"kind":"Function","id":{"krate":0,"index":342},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":98360,"byte_end":98379,"line_start":261,"line_end":261,"column_start":8,"column_end":27},"name":"read_metadata_block","qualname":"::metadata::read_metadata_block","value":"pub fn read_metadata_block<R: ReadBytes>(&mut R, u8, u32)\n-> Result<MetadataBlock>","parent":null,"children":[],"decl_id":null,"docs":" Read a single metadata block of the given type and length from the input.","sig":null,"attributes":[{"value":"/ Read a single metadata block of the given type and length from the input.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":97795,"byte_end":97872,"line_start":250,"line_end":250,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":97873,"byte_end":97876,"line_start":251,"line_end":251,"column_start":1,"column_end":4}},{"value":"/ When reading a regular flac stream, there is no need to use this function","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":97877,"byte_end":97954,"line_start":252,"line_end":252,"column_start":1,"column_end":78}},{"value":"/ directly; constructing a `FlacReader` will read the header and its metadata","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":97955,"byte_end":98034,"line_start":253,"line_end":253,"column_start":1,"column_end":80}},{"value":"/ blocks.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":98035,"byte_end":98046,"line_start":254,"line_end":254,"column_start":1,"column_end":12}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":98047,"byte_end":98050,"line_start":255,"line_end":255,"column_start":1,"column_end":4}},{"value":"/ When a flac stream is embedded in a container format, this function can be","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":98051,"byte_end":98129,"line_start":256,"line_end":256,"column_start":1,"column_end":79}},{"value":"/ used to decode a single metadata block. For instance, the MP4 format sports","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":98130,"byte_end":98209,"line_start":257,"line_end":257,"column_start":1,"column_end":80}},{"value":"/ a “FLAC Specific Box” which contains the block type and the raw data. This","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":98210,"byte_end":98292,"line_start":258,"line_end":258,"column_start":1,"column_end":79}},{"value":"/ function can be used to decode that raw data.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":98293,"byte_end":98342,"line_start":259,"line_end":259,"column_start":1,"column_end":50}},{"value":"inline","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":98343,"byte_end":98352,"line_start":260,"line_end":260,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":355},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":110721,"byte_end":110740,"line_start":557,"line_end":557,"column_start":12,"column_end":31},"name":"MetadataBlockReader","qualname":"::metadata::MetadataBlockReader","value":"MetadataBlockReader {  }","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358}],"decl_id":null,"docs":" Reads metadata blocks from a stream and exposes them as an iterator.","sig":null,"attributes":[{"value":"/ Reads metadata blocks from a stream and exposes them as an iterator.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":110330,"byte_end":110402,"line_start":551,"line_end":551,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":110403,"byte_end":110406,"line_start":552,"line_end":552,"column_start":1,"column_end":4}},{"value":"/ It is assumed that the next byte that the reader will read, is the first","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":110407,"byte_end":110483,"line_start":553,"line_end":553,"column_start":1,"column_end":77}},{"value":"/ byte of a metadata block header. This means that the iterator will yield at","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":110484,"byte_end":110563,"line_start":554,"line_end":554,"column_start":1,"column_end":80}},{"value":"/ least a single value. If the iterator ever yields an error, then no more","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":110564,"byte_end":110640,"line_start":555,"line_end":555,"column_start":1,"column_end":77}},{"value":"/ data will be read thereafter, and the next value will be `None`.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":110641,"byte_end":110709,"line_start":556,"line_end":556,"column_start":1,"column_end":69}}]},{"kind":"Type","id":{"krate":0,"index":359},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":110843,"byte_end":110862,"line_start":563,"line_end":563,"column_start":10,"column_end":29},"name":"MetadataBlockResult","qualname":"::metadata::MetadataBlockResult","value":"Result<MetadataBlock>","parent":null,"children":[],"decl_id":null,"docs":" Either a `MetadataBlock` or an `Error`.\n","sig":null,"attributes":[{"value":"/ Either a `MetadataBlock` or an `Error`.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":110790,"byte_end":110833,"line_start":562,"line_end":562,"column_start":1,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":362},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":111022,"byte_end":111025,"line_start":567,"line_end":567,"column_start":12,"column_end":15},"name":"new","qualname":"<MetadataBlockReader<R>>::new","value":"pub fn new(R) -> MetadataBlockReader<R>","parent":null,"children":[],"decl_id":null,"docs":" Creates a metadata block reader that will yield at least one element.\n","sig":null,"attributes":[{"value":"/ Creates a metadata block reader that will yield at least one element.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":110937,"byte_end":111010,"line_start":566,"line_end":566,"column_start":5,"column_end":78}}]},{"kind":"Mod","id":{"krate":0,"index":369},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\subframe.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"subframe","qualname":"::subframe","value":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\subframe.rs","parent":null,"children":[{"krate":0,"index":370},{"krate":0,"index":373},{"krate":0,"index":376},{"krate":0,"index":377},{"krate":0,"index":380},{"krate":0,"index":383},{"krate":0,"index":386},{"krate":0,"index":387},{"krate":0,"index":390},{"krate":0,"index":572},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":586},{"krate":0,"index":588},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":393},{"krate":0,"index":395},{"krate":0,"index":396},{"krate":0,"index":397},{"krate":0,"index":398},{"krate":0,"index":594},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":415},{"krate":0,"index":419},{"krate":0,"index":421}],"decl_id":null,"docs":" The `subframe` module deals with subframes that make up a frame of the FLAC stream.\n","sig":null,"attributes":[{"value":"/ The `subframe` module deals with subframes that make up a frame of the FLAC stream.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\subframe.rs","byte_start":112523,"byte_end":112610,"line_start":8,"line_end":8,"column_start":1,"column_end":88}}]},{"kind":"Function","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\subframe.rs","byte_start":116220,"byte_end":116235,"line_start":117,"line_end":117,"column_start":8,"column_end":23},"name":"extend_sign_u32","qualname":"::subframe::extend_sign_u32","value":"pub fn extend_sign_u32(u32, u32) -> i32","parent":null,"children":[],"decl_id":null,"docs":" Given a signed two's complement integer in the `bits` least significant\n bits of `val`, extends the sign bit to a valid 32-bit signed integer.\n","sig":null,"attributes":[{"value":"/ Given a signed two's complement integer in the `bits` least significant","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\subframe.rs","byte_start":116045,"byte_end":116120,"line_start":114,"line_end":114,"column_start":1,"column_end":76}},{"value":"/ bits of `val`, extends the sign bit to a valid 32-bit signed integer.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\subframe.rs","byte_start":116121,"byte_end":116194,"line_start":115,"line_end":115,"column_start":1,"column_end":74}},{"value":"inline(always)","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\subframe.rs","byte_start":116195,"byte_end":116212,"line_start":116,"line_end":116,"column_start":1,"column_end":18}}]},{"kind":"Function","id":{"krate":0,"index":398},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\subframe.rs","byte_start":118408,"byte_end":118414,"line_start":184,"line_end":184,"column_start":8,"column_end":14},"name":"decode","qualname":"::subframe::decode","value":"pub fn decode<R: ReadBytes>(&mut Bitstream<R>, u32, &mut [i32]) -> Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Decodes a subframe into the provided block-size buffer.","sig":null,"attributes":[{"value":"/ Decodes a subframe into the provided block-size buffer.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\subframe.rs","byte_start":118270,"byte_end":118329,"line_start":181,"line_end":181,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\subframe.rs","byte_start":118330,"byte_end":118333,"line_start":182,"line_end":182,"column_start":1,"column_end":4}},{"value":"/ It is assumed that the length of the buffer is the block size.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\subframe.rs","byte_start":118334,"byte_end":118400,"line_start":183,"line_end":183,"column_start":1,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":434},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":2676,"byte_end":2686,"line_start":93,"line_end":93,"column_start":12,"column_end":22},"name":"FlacReader","qualname":"::FlacReader","value":"FlacReader {  }","parent":null,"children":[{"krate":0,"index":436},{"krate":0,"index":437},{"krate":0,"index":438}],"decl_id":null,"docs":" A FLAC decoder that can decode the stream from the underlying reader.","sig":null,"attributes":[{"value":"/ A FLAC decoder that can decode the stream from the underlying reader.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":2561,"byte_end":2634,"line_start":90,"line_end":90,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":2635,"byte_end":2638,"line_start":91,"line_end":91,"column_start":1,"column_end":4}},{"value":"/ TODO: Add an example.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":2639,"byte_end":2664,"line_start":92,"line_end":92,"column_start":1,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3884,"byte_end":3901,"line_start":123,"line_end":123,"column_start":12,"column_end":29},"name":"FlacReaderOptions","qualname":"::FlacReaderOptions","value":"FlacReaderOptions { metadata_only, read_vorbis_comment }","parent":null,"children":[{"krate":0,"index":603},{"krate":0,"index":604}],"decl_id":null,"docs":" Controls what metadata `FlacReader` reads when constructed.","sig":null,"attributes":[{"value":"/ Controls what metadata `FlacReader` reads when constructed.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3030,"byte_end":3093,"line_start":106,"line_end":106,"column_start":1,"column_end":64}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3094,"byte_end":3097,"line_start":107,"line_end":107,"column_start":1,"column_end":4}},{"value":"/ The FLAC format contains a number of metadata blocks before the start of","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3098,"byte_end":3174,"line_start":108,"line_end":108,"column_start":1,"column_end":77}},{"value":"/ audio data. Reading these is wasteful if the data is never used. The","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3175,"byte_end":3247,"line_start":109,"line_end":109,"column_start":1,"column_end":73}},{"value":"/ `FlacReaderOptions` indicate which blocks to look for. As soon as all","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3248,"byte_end":3321,"line_start":110,"line_end":110,"column_start":1,"column_end":74}},{"value":"/ desired blocks have been read, `FlacReader::new_ext()` returns without","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3322,"byte_end":3396,"line_start":111,"line_end":111,"column_start":1,"column_end":75}},{"value":"/ reading remaining metadata blocks.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3397,"byte_end":3435,"line_start":112,"line_end":112,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3436,"byte_end":3439,"line_start":113,"line_end":113,"column_start":1,"column_end":4}},{"value":"/ A few use cases:","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3440,"byte_end":3460,"line_start":114,"line_end":114,"column_start":1,"column_end":21}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3461,"byte_end":3464,"line_start":115,"line_end":115,"column_start":1,"column_end":4}},{"value":"/ * To read only the streaminfo, as quickly as possible, set `metadata_only`","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3465,"byte_end":3543,"line_start":116,"line_end":116,"column_start":1,"column_end":79}},{"value":"/   to true and `read_vorbis_comment` to false. The resulting reader cannot be","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3544,"byte_end":3624,"line_start":117,"line_end":117,"column_start":1,"column_end":81}},{"value":"/   used to read audio data.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3625,"byte_end":3655,"line_start":118,"line_end":118,"column_start":1,"column_end":31}},{"value":"/ * To read only the streaminfo and tags, set `metadata_only` and","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3656,"byte_end":3723,"line_start":119,"line_end":119,"column_start":1,"column_end":68}},{"value":"/   `read_vorbis_comment` both to true. The resulting reader cannot be used to","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3724,"byte_end":3804,"line_start":120,"line_end":120,"column_start":1,"column_end":81}},{"value":"/   read audio data.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3805,"byte_end":3827,"line_start":121,"line_end":121,"column_start":1,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":4236,"byte_end":4249,"line_start":131,"line_end":131,"column_start":9,"column_end":22},"name":"metadata_only","qualname":"::FlacReaderOptions::metadata_only","value":"bool","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" When true, return a reader as soon as all desired metadata has been read.","sig":null,"attributes":[{"value":"/ When true, return a reader as soon as all desired metadata has been read.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3908,"byte_end":3985,"line_start":124,"line_end":124,"column_start":5,"column_end":82}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3990,"byte_end":3993,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ If this is set, the `FlacReader` will not be able to read audio samples.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":3998,"byte_end":4074,"line_start":126,"line_end":126,"column_start":5,"column_end":81}},{"value":"/ When reading audio is not desired anyway, enabling `metadata_only` can","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":4079,"byte_end":4153,"line_start":127,"line_end":127,"column_start":5,"column_end":79}},{"value":"/ save a lot of expensive reads.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":4158,"byte_end":4192,"line_start":128,"line_end":128,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":4197,"byte_end":4200,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ Defaults to false.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":4205,"byte_end":4227,"line_start":130,"line_end":130,"column_start":5,"column_end":27}}]},{"kind":"Field","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":4641,"byte_end":4660,"line_start":141,"line_end":141,"column_start":9,"column_end":28},"name":"read_vorbis_comment","qualname":"::FlacReaderOptions::read_vorbis_comment","value":"bool","parent":{"krate":0,"index":602},"children":[],"decl_id":null,"docs":" When true, read metadata blocks at least until a Vorbis comment block is found.","sig":null,"attributes":[{"value":"/ When true, read metadata blocks at least until a Vorbis comment block is found.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":4262,"byte_end":4345,"line_start":133,"line_end":133,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":4350,"byte_end":4353,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ When false, the `FlacReader` will be constructed without reading a","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":4358,"byte_end":4428,"line_start":135,"line_end":135,"column_start":5,"column_end":75}},{"value":"/ Vorbis comment block, even if the stream contains one. Consequently,","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":4433,"byte_end":4505,"line_start":136,"line_end":136,"column_start":5,"column_end":77}},{"value":"/ `FlacReader::tags()` and other tag-related methods will not return tag","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":4510,"byte_end":4584,"line_start":137,"line_end":137,"column_start":5,"column_end":79}},{"value":"/ data.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":4589,"byte_end":4598,"line_start":138,"line_end":138,"column_start":5,"column_end":14}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":4603,"byte_end":4606,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ Defaults to true.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":4611,"byte_end":4632,"line_start":140,"line_end":140,"column_start":5,"column_end":26}}]},{"kind":"Struct","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":5407,"byte_end":5418,"line_start":169,"line_end":169,"column_start":12,"column_end":23},"name":"FlacSamples","qualname":"::FlacSamples","value":"FlacSamples {  }","parent":null,"children":[{"krate":0,"index":453},{"krate":0,"index":454},{"krate":0,"index":455},{"krate":0,"index":456},{"krate":0,"index":457}],"decl_id":null,"docs":" An iterator that yields samples read from a `FlacReader`.\n","sig":null,"attributes":[{"value":"/ An iterator that yields samples read from a `FlacReader`.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":5334,"byte_end":5395,"line_start":168,"line_end":168,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":464},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":6954,"byte_end":6957,"line_start":213,"line_end":213,"column_start":12,"column_end":15},"name":"new","qualname":"<FlacReader<R>>::new","value":"pub fn new(R) -> Result<FlacReader<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a reader that reads the FLAC format.","sig":null,"attributes":[{"value":"/ Create a reader that reads the FLAC format.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":6483,"byte_end":6530,"line_start":204,"line_end":204,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":6535,"byte_end":6538,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ The header and metadata blocks are read immediately. Audio frames","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":6543,"byte_end":6612,"line_start":206,"line_end":206,"column_start":5,"column_end":74}},{"value":"/ will be read on demand.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":6617,"byte_end":6644,"line_start":207,"line_end":207,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":6649,"byte_end":6652,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ Claxon rejects files that claim to contain excessively large metadata","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":6657,"byte_end":6730,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ blocks, to protect against denial of service attacks where a","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":6735,"byte_end":6799,"line_start":210,"line_end":210,"column_start":5,"column_end":69}},{"value":"/ small damaged or malicous file could cause gigabytes of memory","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":6804,"byte_end":6870,"line_start":211,"line_end":211,"column_start":5,"column_end":71}},{"value":"/ to be allocated. `Error::Unsupported` is returned in that case.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":6875,"byte_end":6942,"line_start":212,"line_end":212,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":7616,"byte_end":7623,"line_start":226,"line_end":226,"column_start":12,"column_end":19},"name":"new_ext","qualname":"<FlacReader<R>>::new_ext","value":"pub fn new_ext(R, FlacReaderOptions) -> Result<FlacReader<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a reader that reads the FLAC format, with reader options.","sig":null,"attributes":[{"value":"/ Create a reader that reads the FLAC format, with reader options.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":7073,"byte_end":7141,"line_start":217,"line_end":217,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":7146,"byte_end":7149,"line_start":218,"line_end":218,"column_start":5,"column_end":8}},{"value":"/ The header and metadata blocks are read immediately, but only as much as","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":7154,"byte_end":7230,"line_start":219,"line_end":219,"column_start":5,"column_end":81}},{"value":"/ specified in the options. See `FlacReaderOptions` for more details.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":7235,"byte_end":7306,"line_start":220,"line_end":220,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":7311,"byte_end":7314,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Claxon rejects files that claim to contain excessively large metadata","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":7319,"byte_end":7392,"line_start":222,"line_end":222,"column_start":5,"column_end":78}},{"value":"/ blocks, to protect against denial of service attacks where a","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":7397,"byte_end":7461,"line_start":223,"line_end":223,"column_start":5,"column_end":69}},{"value":"/ small damaged or malicous file could cause gigabytes of memory","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":7466,"byte_end":7532,"line_start":224,"line_end":224,"column_start":5,"column_end":71}},{"value":"/ to be allocated. `Error::Unsupported` is returned in that case.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":7537,"byte_end":7604,"line_start":225,"line_end":225,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":11027,"byte_end":11037,"line_start":308,"line_end":308,"column_start":12,"column_end":22},"name":"streaminfo","qualname":"<FlacReader<R>>::streaminfo","value":"pub fn streaminfo(&Self) -> StreamInfo","parent":null,"children":[],"decl_id":null,"docs":" Returns the streaminfo metadata.","sig":null,"attributes":[{"value":"/ Returns the streaminfo metadata.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":10892,"byte_end":10928,"line_start":305,"line_end":305,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":10933,"byte_end":10936,"line_start":306,"line_end":306,"column_start":5,"column_end":8}},{"value":"/ This contains information like the sample rate and number of channels.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":10941,"byte_end":11015,"line_start":307,"line_end":307,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":467},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":11368,"byte_end":11374,"line_start":317,"line_end":317,"column_start":12,"column_end":18},"name":"vendor","qualname":"<FlacReader<R>>::vendor","value":"pub fn vendor(&Self) -> Option<&str>","parent":null,"children":[],"decl_id":null,"docs":" Returns the vendor string of the Vorbis comment block, if present.","sig":null,"attributes":[{"value":"/ Returns the vendor string of the Vorbis comment block, if present.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":11096,"byte_end":11166,"line_start":312,"line_end":312,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":11171,"byte_end":11174,"line_start":313,"line_end":313,"column_start":5,"column_end":8}},{"value":"/ This string usually contains the name and version of the program that","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":11179,"byte_end":11252,"line_start":314,"line_end":314,"column_start":5,"column_end":78}},{"value":"/ encoded the FLAC stream, such as `reference libFLAC 1.3.2 20170101`","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":11257,"byte_end":11328,"line_start":315,"line_end":315,"column_start":5,"column_end":76}},{"value":"/ or `Lavf57.25.100`.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":11333,"byte_end":11356,"line_start":316,"line_end":316,"column_start":5,"column_end":28}}]},{"kind":"Method","id":{"krate":0,"index":469},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":12025,"byte_end":12029,"line_start":331,"line_end":331,"column_start":12,"column_end":16},"name":"tags","qualname":"<FlacReader<R>>::tags","value":"pub fn tags<'a>(&'a Self) -> metadata::Tags","parent":null,"children":[],"decl_id":null,"docs":" Returns name-value pairs of Vorbis comments, such as `(\"ARTIST\", \"Queen\")`.","sig":null,"attributes":[{"value":"/ Returns name-value pairs of Vorbis comments, such as `(\"ARTIST\", \"Queen\")`.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":11473,"byte_end":11552,"line_start":321,"line_end":321,"column_start":5,"column_end":84}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":11557,"byte_end":11560,"line_start":322,"line_end":322,"column_start":5,"column_end":8}},{"value":"/ The name is supposed to be interpreted case-insensitively, and is","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":11565,"byte_end":11634,"line_start":323,"line_end":323,"column_start":5,"column_end":74}},{"value":"/ guaranteed to consist of ASCII characters. Claxon does not normalize","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":11639,"byte_end":11711,"line_start":324,"line_end":324,"column_start":5,"column_end":77}},{"value":"/ the casing of the name. Use `get_tag()` to do a case-insensitive lookup.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":11716,"byte_end":11792,"line_start":325,"line_end":325,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":11797,"byte_end":11800,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ Names need not be unique. For instance, multiple `ARTIST` comments might","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":11805,"byte_end":11881,"line_start":327,"line_end":327,"column_start":5,"column_end":81}},{"value":"/ be present on a collaboration track.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":11886,"byte_end":11926,"line_start":328,"line_end":328,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":11931,"byte_end":11934,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ See <https://www.xiph.org/vorbis/doc/v-comment.html> for more details.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":11939,"byte_end":12013,"line_start":330,"line_end":330,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":471},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":12934,"byte_end":12941,"line_start":350,"line_end":350,"column_start":12,"column_end":19},"name":"get_tag","qualname":"<FlacReader<R>>::get_tag","value":"pub fn get_tag<'a>(&'a Self, &'a str) -> metadata::GetTag","parent":null,"children":[],"decl_id":null,"docs":" Look up a Vorbis comment such as `ARTIST` in a case-insensitive way.","sig":null,"attributes":[{"value":"/ Look up a Vorbis comment such as `ARTIST` in a case-insensitive way.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":12243,"byte_end":12315,"line_start":338,"line_end":338,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":12320,"byte_end":12323,"line_start":339,"line_end":339,"column_start":5,"column_end":8}},{"value":"/ Returns an iterator,  because tags may occur more than once. There could","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":12328,"byte_end":12404,"line_start":340,"line_end":340,"column_start":5,"column_end":81}},{"value":"/ be multiple `ARTIST` tags on a collaboration track, for instance.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":12409,"byte_end":12478,"line_start":341,"line_end":341,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":12483,"byte_end":12486,"line_start":342,"line_end":342,"column_start":5,"column_end":8}},{"value":"/ Note that tag names are ASCII and never contain `'='`; trying to look up","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":12491,"byte_end":12567,"line_start":343,"line_end":343,"column_start":5,"column_end":81}},{"value":"/ a non-ASCII tag will return no results. Furthermore, the Vorbis comment","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":12572,"byte_end":12647,"line_start":344,"line_end":344,"column_start":5,"column_end":80}},{"value":"/ spec dictates that tag names should be handled case-insensitively, so","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":12652,"byte_end":12725,"line_start":345,"line_end":345,"column_start":5,"column_end":78}},{"value":"/ this method performs a case-insensitive lookup.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":12730,"byte_end":12781,"line_start":346,"line_end":346,"column_start":5,"column_end":56}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":12786,"byte_end":12789,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ See also `tags()` for access to the raw tags.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":12794,"byte_end":12843,"line_start":348,"line_end":348,"column_start":5,"column_end":54}},{"value":"/ See <https://www.xiph.org/vorbis/doc/v-comment.html> for more details.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":12848,"byte_end":12922,"line_start":349,"line_end":349,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":473},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":13561,"byte_end":13567,"line_start":363,"line_end":363,"column_start":12,"column_end":18},"name":"blocks","qualname":"<FlacReader<R>>::blocks","value":"pub fn blocks<'r>(&'r mut Self) -> FrameReader<&'r mut BufferedReader<R>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator that decodes a single frame on every iteration.\n TODO: It is not an iterator.","sig":null,"attributes":[{"value":"/ Returns an iterator that decodes a single frame on every iteration.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":13200,"byte_end":13271,"line_start":357,"line_end":357,"column_start":5,"column_end":76}},{"value":"/ TODO: It is not an iterator.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":13276,"byte_end":13308,"line_start":358,"line_end":358,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":13313,"byte_end":13316,"line_start":359,"line_end":359,"column_start":5,"column_end":8}},{"value":"/ This is a low-level primitive that gives you control over when decoding","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":13321,"byte_end":13396,"line_start":360,"line_end":360,"column_start":5,"column_end":80}},{"value":"/ happens. The representation of the decoded audio is somewhat specific to","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":13401,"byte_end":13477,"line_start":361,"line_end":361,"column_start":5,"column_end":81}},{"value":"/ the FLAC format. For a higher-level interface, see `samples()`.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":13482,"byte_end":13549,"line_start":362,"line_end":362,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":475},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":15216,"byte_end":15223,"line_start":392,"line_end":392,"column_start":12,"column_end":19},"name":"samples","qualname":"<FlacReader<R>>::samples","value":"pub fn samples<'r>(&'r mut Self) -> FlacSamples<&'r mut BufferedReader<R>>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over all samples.","sig":null,"attributes":[{"value":"/ Returns an iterator over all samples.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":13938,"byte_end":13979,"line_start":372,"line_end":372,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":13984,"byte_end":13987,"line_start":373,"line_end":373,"column_start":5,"column_end":8}},{"value":"/ The channel data is is interleaved. The iterator is streaming. That is,","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":13992,"byte_end":14067,"line_start":374,"line_end":374,"column_start":5,"column_end":80}},{"value":"/ if you call this method once, read a few samples, and call this method","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":14072,"byte_end":14146,"line_start":375,"line_end":375,"column_start":5,"column_end":79}},{"value":"/ again, the second iterator will not start again from the beginning of","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":14151,"byte_end":14224,"line_start":376,"line_end":376,"column_start":5,"column_end":78}},{"value":"/ the file. It will continue somewhere after where the first iterator","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":14229,"byte_end":14300,"line_start":377,"line_end":377,"column_start":5,"column_end":76}},{"value":"/ stopped, and it might skip some samples. (This is because FLAC divides","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":14305,"byte_end":14379,"line_start":378,"line_end":378,"column_start":5,"column_end":79}},{"value":"/ a stream into blocks, which have to be decoded entirely. If you drop the","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":14384,"byte_end":14460,"line_start":379,"line_end":379,"column_start":5,"column_end":81}},{"value":"/ iterator, you lose the unread samples in that block.)","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":14465,"byte_end":14522,"line_start":380,"line_end":380,"column_start":5,"column_end":62}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":14527,"byte_end":14530,"line_start":381,"line_end":381,"column_start":5,"column_end":8}},{"value":"/ This is a user-friendly interface that trades performance for ease of","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":14535,"byte_end":14608,"line_start":382,"line_end":382,"column_start":5,"column_end":78}},{"value":"/ use. If performance is an issue, consider using `blocks()` instead.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":14613,"byte_end":14684,"line_start":383,"line_end":383,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":14689,"byte_end":14692,"line_start":384,"line_end":384,"column_start":5,"column_end":8}},{"value":"/ This is a high-level interface to the decoder. The cost of retrieving","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":14697,"byte_end":14770,"line_start":385,"line_end":385,"column_start":5,"column_end":78}},{"value":"/ the next sample can vary significantly, as sometimes a new block has to","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":14775,"byte_end":14850,"line_start":386,"line_end":386,"column_start":5,"column_end":80}},{"value":"/ be decoded. Additionally, there is a cost to every iteration returning a","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":14855,"byte_end":14931,"line_start":387,"line_end":387,"column_start":5,"column_end":81}},{"value":"/ `Result`. When a block has been decoded, iterating the samples in that","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":14936,"byte_end":15010,"line_start":388,"line_end":388,"column_start":5,"column_end":79}},{"value":"/ block can never fail, but a match on every sample is required","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":15015,"byte_end":15080,"line_start":389,"line_end":389,"column_start":5,"column_end":70}},{"value":"/ nonetheless. For more control over when decoding happens, and less error","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":15085,"byte_end":15161,"line_start":390,"line_end":390,"column_start":5,"column_end":81}},{"value":"/ handling overhead, use `blocks()`.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":15166,"byte_end":15204,"line_start":391,"line_end":391,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":16045,"byte_end":16055,"line_start":414,"line_end":414,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<FlacReader<R>>::into_inner","value":"pub fn into_inner(Self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Destroys the FLAC reader and returns the underlying reader.","sig":null,"attributes":[{"value":"/ Destroys the FLAC reader and returns the underlying reader.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":15860,"byte_end":15923,"line_start":410,"line_end":410,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":15928,"byte_end":15931,"line_start":411,"line_end":411,"column_start":5,"column_end":8}},{"value":"/ Because the reader employs buffering internally, anything in the buffer","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":15936,"byte_end":16011,"line_start":412,"line_end":412,"column_start":5,"column_end":80}},{"value":"/ will be lost.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":16016,"byte_end":16033,"line_start":413,"line_end":413,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":479},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":16579,"byte_end":16583,"line_start":428,"line_end":428,"column_start":12,"column_end":16},"name":"open","qualname":"<FlacReader<fs::File>>::open","value":"pub fn open<P: AsRef<path::Path>>(P) -> Result<FlacReader<fs::File>>","parent":null,"children":[],"decl_id":null,"docs":" Attempts to create a reader that reads from the specified file.","sig":null,"attributes":[{"value":"/ Attempts to create a reader that reads from the specified file.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":16275,"byte_end":16342,"line_start":423,"line_end":423,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":16347,"byte_end":16350,"line_start":424,"line_end":424,"column_start":5,"column_end":8}},{"value":"/ This is a convenience constructor that opens a `File`, and constructs a","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":16355,"byte_end":16430,"line_start":425,"line_end":425,"column_start":5,"column_end":80}},{"value":"/ `FlacReader` from it. There is no need to wrap the file in a","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":16435,"byte_end":16499,"line_start":426,"line_end":426,"column_start":5,"column_end":69}},{"value":"/ `BufReader`, as the `FlacReader` employs buffering already.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":16504,"byte_end":16567,"line_start":427,"line_end":427,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":481},"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":17048,"byte_end":17056,"line_start":438,"line_end":438,"column_start":12,"column_end":20},"name":"open_ext","qualname":"<FlacReader<fs::File>>::open_ext","value":"pub fn open_ext<P: AsRef<path::Path>>(P, FlacReaderOptions)\n-> Result<FlacReader<fs::File>>","parent":null,"children":[],"decl_id":null,"docs":" Attemps to create a reader that reads from the specified file.","sig":null,"attributes":[{"value":"/ Attemps to create a reader that reads from the specified file.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":16745,"byte_end":16811,"line_start":433,"line_end":433,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":16816,"byte_end":16819,"line_start":434,"line_end":434,"column_start":5,"column_end":8}},{"value":"/ This is a convenience constructor that opens a `File`, and constructs a","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":16824,"byte_end":16899,"line_start":435,"line_end":435,"column_start":5,"column_end":80}},{"value":"/ `FlacReader` from it. There is no need to wrap the file in a","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":16904,"byte_end":16968,"line_start":436,"line_end":436,"column_start":5,"column_end":69}},{"value":"/ `BufReader`, as the `FlacReader` employs buffering already.","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":16973,"byte_end":17036,"line_start":437,"line_end":437,"column_start":5,"column_end":68}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\crc.rs","byte_start":23824,"byte_end":23834,"line_start":75,"line_end":75,"column_start":20,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":62},{"krate":0,"index":63},{"krate":0,"index":64}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\crc.rs","byte_start":24302,"byte_end":24313,"line_start":95,"line_end":95,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\crc.rs","byte_start":24833,"byte_end":24843,"line_start":115,"line_end":115,"column_start":34,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\crc.rs","byte_start":25749,"byte_end":25760,"line_start":147,"line_end":147,"column_start":34,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":78},{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":28716,"byte_end":28721,"line_start":34,"line_end":34,"column_start":20,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":99}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":29149,"byte_end":29154,"line_start":47,"line_end":47,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":111}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":29801,"byte_end":29806,"line_start":64,"line_end":64,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":113},{"krate":0,"index":114}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":30301,"byte_end":30306,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":116}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":30422,"byte_end":30427,"line_start":88,"line_end":88,"column_start":38,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":118}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":32251,"byte_end":32262,"line_start":50,"line_end":50,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":46329,"byte_end":46334,"line_start":413,"line_end":413,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":169},{"krate":0,"index":170},{"krate":0,"index":171},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174},{"krate":0,"index":175},{"krate":0,"index":176},{"krate":0,"index":177},{"krate":0,"index":178}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":50767,"byte_end":50780,"line_start":554,"line_end":554,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":54243,"byte_end":54254,"line_start":650,"line_end":650,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":196},{"krate":0,"index":197},{"krate":0,"index":198}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":61761,"byte_end":61775,"line_start":38,"line_end":38,"column_start":19,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":65030,"byte_end":65044,"line_start":130,"line_end":130,"column_start":33,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":231},{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":68438,"byte_end":68444,"line_start":234,"line_end":234,"column_start":40,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":75220,"byte_end":75229,"line_start":424,"line_end":424,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":255},{"krate":0,"index":256},{"krate":0,"index":257},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":262}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Inherent","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":94487,"byte_end":94491,"line_start":139,"line_end":139,"column_start":10,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":314}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":94704,"byte_end":94708,"line_start":149,"line_end":149,"column_start":23,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":317},{"krate":0,"index":318},{"krate":0,"index":320}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":95100,"byte_end":95104,"line_start":165,"line_end":165,"column_start":32,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Inherent","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":95529,"byte_end":95535,"line_start":179,"line_end":179,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":95839,"byte_end":95845,"line_start":191,"line_end":191,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":333},{"krate":0,"index":334}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Inherent","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":110908,"byte_end":110927,"line_start":565,"line_end":565,"column_start":20,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":362},{"krate":0,"index":363}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":111494,"byte_end":111513,"line_start":583,"line_end":583,"column_start":33,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":366},{"krate":0,"index":367},{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":4688,"byte_end":4705,"line_start":144,"line_end":144,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":448}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Inherent","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":4873,"byte_end":4890,"line_start":153,"line_end":153,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":6463,"byte_end":6473,"line_start":203,"line_end":203,"column_start":19,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":464},{"krate":0,"index":465},{"krate":0,"index":466},{"krate":0,"index":467},{"krate":0,"index":469},{"krate":0,"index":471},{"krate":0,"index":473},{"krate":0,"index":475},{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":16248,"byte_end":16258,"line_start":422,"line_end":422,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":479},{"krate":0,"index":481}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":17373,"byte_end":17384,"line_start":446,"line_end":446,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":485},{"krate":0,"index":486}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":2447,"byte_end":2452,"line_start":82,"line_end":82,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":123}},{"kind":"Mod","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":2462,"byte_end":2467,"line_start":83,"line_end":83,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":199}},{"kind":"Mod","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":2477,"byte_end":2485,"line_start":84,"line_end":84,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":263}},{"kind":"Mod","span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":2495,"byte_end":2503,"line_start":85,"line_end":85,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":369}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\crc.rs","byte_start":23824,"byte_end":23834,"line_start":75,"line_end":75,"column_start":20,"column_end":30},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":52},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\crc.rs","byte_start":24302,"byte_end":24313,"line_start":95,"line_end":95,"column_start":20,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":56},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\crc.rs","byte_start":24833,"byte_end":24843,"line_start":115,"line_end":115,"column_start":34,"column_end":44},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":52},"to":{"krate":0,"index":217}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\crc.rs","byte_start":25749,"byte_end":25760,"line_start":147,"line_end":147,"column_start":34,"column_end":45},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":56},"to":{"krate":0,"index":217}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":28716,"byte_end":28721,"line_start":34,"line_end":34,"column_start":20,"column_end":25},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":2504}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":29149,"byte_end":29154,"line_start":47,"line_end":47,"column_start":23,"column_end":28},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":8901}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":29801,"byte_end":29806,"line_start":64,"line_end":64,"column_start":23,"column_end":28},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":487},"to":{"krate":1,"index":2326}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":30301,"byte_end":30306,"line_start":82,"line_end":82,"column_start":26,"column_end":31},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\error.rs","byte_start":30422,"byte_end":30427,"line_start":88,"line_end":88,"column_start":38,"column_end":43},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":487},"to":{"krate":2,"index":2759}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":32251,"byte_end":32262,"line_start":50,"line_end":50,"column_start":6,"column_end":17},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":532},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":46329,"byte_end":46334,"line_start":413,"line_end":413,"column_start":6,"column_end":11},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":163},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":50767,"byte_end":50780,"line_start":554,"line_end":554,"column_start":23,"column_end":36},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":180},"to":{"krate":2,"index":7317}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\frame.rs","byte_start":54243,"byte_end":54254,"line_start":650,"line_end":650,"column_start":20,"column_end":31},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":189},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":61761,"byte_end":61775,"line_start":38,"line_end":38,"column_start":19,"column_end":33},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":206},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":65030,"byte_end":65044,"line_start":130,"line_end":130,"column_start":33,"column_end":47},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":206},"to":{"krate":0,"index":217}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":68438,"byte_end":68444,"line_start":234,"line_end":234,"column_start":40,"column_end":46},"kind":{"Impl":{"id":15}},"from":{"krate":1,"index":9528},"to":{"krate":0,"index":217}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\input.rs","byte_start":75220,"byte_end":75229,"line_start":424,"line_end":424,"column_start":20,"column_end":29},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":248},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":94487,"byte_end":94491,"line_start":139,"line_end":139,"column_start":10,"column_end":14},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":94704,"byte_end":94708,"line_start":149,"line_end":149,"column_start":23,"column_end":27},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":309},"to":{"krate":2,"index":7317}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":95100,"byte_end":95104,"line_start":165,"line_end":165,"column_start":32,"column_end":36},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":309},"to":{"krate":2,"index":7206}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":95529,"byte_end":95535,"line_start":179,"line_end":179,"column_start":10,"column_end":16},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":95839,"byte_end":95845,"line_start":191,"line_end":191,"column_start":23,"column_end":29},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":323},"to":{"krate":2,"index":7317}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":110908,"byte_end":110927,"line_start":565,"line_end":565,"column_start":20,"column_end":39},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\metadata.rs","byte_start":111494,"byte_end":111513,"line_start":583,"line_end":583,"column_start":33,"column_end":52},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":355},"to":{"krate":2,"index":7317}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":4688,"byte_end":4705,"line_start":144,"line_end":144,"column_start":18,"column_end":35},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":602},"to":{"krate":2,"index":2831}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":4873,"byte_end":4890,"line_start":153,"line_end":153,"column_start":6,"column_end":23},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":602},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":6463,"byte_end":6473,"line_start":203,"line_end":203,"column_start":19,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":16248,"byte_end":16258,"line_start":422,"line_end":422,"column_start":6,"column_end":16},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":434},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\kapil\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\claxon-0.4.3\\src\\lib.rs","byte_start":17373,"byte_end":17384,"line_start":446,"line_end":446,"column_start":33,"column_end":44},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":451},"to":{"krate":2,"index":7317}}]}